// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EntryProtocol.proto

package com.chail.kafka.kafka2kafka.parse;

public final class DSyncEntry {
  private DSyncEntry() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   **打散后的事件类型，主要用于标识事务的开始，变更数据，结束*
   * </pre>
   *
   * Protobuf enum {@code com.mchz.kafkadataformatinput.formatmodel.EntryType}
   */
  public enum EntryType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ENTRYTYPECOMPATIBLEPROTO2 = 0;</code>
     */
    ENTRYTYPECOMPATIBLEPROTO2(0),
    /**
     * <code>TRANSACTIONBEGIN = 1;</code>
     */
    TRANSACTIONBEGIN(1),
    /**
     * <code>ROWDATA = 2;</code>
     */
    ROWDATA(2),
    /**
     * <code>TRANSACTIONEND = 3;</code>
     */
    TRANSACTIONEND(3),
    /**
     * <pre>
     ** 心跳类型，内部使用，外部暂不可见，可忽略 *
     * </pre>
     *
     * <code>HEARTBEAT = 4;</code>
     */
    HEARTBEAT(4),
    /**
     * <code>GTIDLOG = 5;</code>
     */
    GTIDLOG(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ENTRYTYPECOMPATIBLEPROTO2 = 0;</code>
     */
    public static final int ENTRYTYPECOMPATIBLEPROTO2_VALUE = 0;
    /**
     * <code>TRANSACTIONBEGIN = 1;</code>
     */
    public static final int TRANSACTIONBEGIN_VALUE = 1;
    /**
     * <code>ROWDATA = 2;</code>
     */
    public static final int ROWDATA_VALUE = 2;
    /**
     * <code>TRANSACTIONEND = 3;</code>
     */
    public static final int TRANSACTIONEND_VALUE = 3;
    /**
     * <pre>
     ** 心跳类型，内部使用，外部暂不可见，可忽略 *
     * </pre>
     *
     * <code>HEARTBEAT = 4;</code>
     */
    public static final int HEARTBEAT_VALUE = 4;
    /**
     * <code>GTIDLOG = 5;</code>
     */
    public static final int GTIDLOG_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static EntryType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EntryType forNumber(int value) {
      switch (value) {
        case 0: return ENTRYTYPECOMPATIBLEPROTO2;
        case 1: return TRANSACTIONBEGIN;
        case 2: return ROWDATA;
        case 3: return TRANSACTIONEND;
        case 4: return HEARTBEAT;
        case 5: return GTIDLOG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EntryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EntryType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EntryType>() {
            public EntryType findValueByNumber(int number) {
              return EntryType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DSyncEntry.getDescriptor().getEnumTypes().get(0);
    }

    private static final EntryType[] VALUES = values();

    public static EntryType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EntryType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mchz.kafkadataformatinput.formatmodel.EntryType)
  }

  /**
   * <pre>
   ** 事件类型 *
   * </pre>
   *
   * Protobuf enum {@code com.mchz.kafkadataformatinput.formatmodel.EventType}
   */
  public enum EventType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EVENTTYPECOMPATIBLEPROTO2 = 0;</code>
     */
    EVENTTYPECOMPATIBLEPROTO2(0),
    /**
     * <code>INSERT = 1;</code>
     */
    INSERT(1),
    /**
     * <code>UPDATE = 2;</code>
     */
    UPDATE(2),
    /**
     * <code>DELETE = 3;</code>
     */
    DELETE(3),
    /**
     * <code>CREATE = 4;</code>
     */
    CREATE(4),
    /**
     * <code>ALTER = 5;</code>
     */
    ALTER(5),
    /**
     * <code>ERASE = 6;</code>
     */
    ERASE(6),
    /**
     * <code>QUERY = 7;</code>
     */
    QUERY(7),
    /**
     * <code>TRUNCATE = 8;</code>
     */
    TRUNCATE(8),
    /**
     * <code>RENAME = 9;</code>
     */
    RENAME(9),
    /**
     * <pre>
     **CREATE INDEX*
     * </pre>
     *
     * <code>CINDEX = 10;</code>
     */
    CINDEX(10),
    /**
     * <code>DINDEX = 11;</code>
     */
    DINDEX(11),
    /**
     * <code>GTID = 12;</code>
     */
    GTID(12),
    /**
     * <pre>
     ** XA *
     * </pre>
     *
     * <code>XACOMMIT = 13;</code>
     */
    XACOMMIT(13),
    /**
     * <code>XAROLLBACK = 14;</code>
     */
    XAROLLBACK(14),
    /**
     * <pre>
     ** MASTER HEARTBEAT *
     * </pre>
     *
     * <code>MHEARTBEAT = 15;</code>
     */
    MHEARTBEAT(15),
    /**
     * <code>DROP = 16;</code>
     */
    DROP(16),
    /**
     * <code>LOB_SLICE = 17;</code>
     */
    LOB_SLICE(17),
    /**
     * <code>OBJECT_EXCEPTION = 18;</code>
     */
    OBJECT_EXCEPTION(18),
    /**
     * <code>OBJECT_FINISH = 19;</code>
     */
    OBJECT_FINISH(19),
    /**
     * <code>STOCK_EXCEPTION = 20;</code>
     */
    STOCK_EXCEPTION(20),
    /**
     * <code>STOCK_FINISH = 21;</code>
     */
    STOCK_FINISH(21),
    /**
     * <code>ROWROLLBACK = 50;</code>
     */
    ROWROLLBACK(50),
    /**
     * <code>ROW_CFA = 51;</code>
     */
    ROW_CFA(51),
    /**
     * <code>ROW_LMN = 52;</code>
     */
    ROW_LMN(52),
    /**
     * <code>ROW_LOCK = 53;</code>
     */
    ROW_LOCK(53),
    /**
     * <code>ROW_CHAIN = 54;</code>
     */
    ROW_CHAIN(54),
    /**
     * <code>ROW_MFC = 55;</code>
     */
    ROW_MFC(55),
    /**
     * <code>DDL_TRANSACTION = 56;</code>
     */
    DDL_TRANSACTION(56),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>EVENTTYPECOMPATIBLEPROTO2 = 0;</code>
     */
    public static final int EVENTTYPECOMPATIBLEPROTO2_VALUE = 0;
    /**
     * <code>INSERT = 1;</code>
     */
    public static final int INSERT_VALUE = 1;
    /**
     * <code>UPDATE = 2;</code>
     */
    public static final int UPDATE_VALUE = 2;
    /**
     * <code>DELETE = 3;</code>
     */
    public static final int DELETE_VALUE = 3;
    /**
     * <code>CREATE = 4;</code>
     */
    public static final int CREATE_VALUE = 4;
    /**
     * <code>ALTER = 5;</code>
     */
    public static final int ALTER_VALUE = 5;
    /**
     * <code>ERASE = 6;</code>
     */
    public static final int ERASE_VALUE = 6;
    /**
     * <code>QUERY = 7;</code>
     */
    public static final int QUERY_VALUE = 7;
    /**
     * <code>TRUNCATE = 8;</code>
     */
    public static final int TRUNCATE_VALUE = 8;
    /**
     * <code>RENAME = 9;</code>
     */
    public static final int RENAME_VALUE = 9;
    /**
     * <pre>
     **CREATE INDEX*
     * </pre>
     *
     * <code>CINDEX = 10;</code>
     */
    public static final int CINDEX_VALUE = 10;
    /**
     * <code>DINDEX = 11;</code>
     */
    public static final int DINDEX_VALUE = 11;
    /**
     * <code>GTID = 12;</code>
     */
    public static final int GTID_VALUE = 12;
    /**
     * <pre>
     ** XA *
     * </pre>
     *
     * <code>XACOMMIT = 13;</code>
     */
    public static final int XACOMMIT_VALUE = 13;
    /**
     * <code>XAROLLBACK = 14;</code>
     */
    public static final int XAROLLBACK_VALUE = 14;
    /**
     * <pre>
     ** MASTER HEARTBEAT *
     * </pre>
     *
     * <code>MHEARTBEAT = 15;</code>
     */
    public static final int MHEARTBEAT_VALUE = 15;
    /**
     * <code>DROP = 16;</code>
     */
    public static final int DROP_VALUE = 16;
    /**
     * <code>LOB_SLICE = 17;</code>
     */
    public static final int LOB_SLICE_VALUE = 17;
    /**
     * <code>OBJECT_EXCEPTION = 18;</code>
     */
    public static final int OBJECT_EXCEPTION_VALUE = 18;
    /**
     * <code>OBJECT_FINISH = 19;</code>
     */
    public static final int OBJECT_FINISH_VALUE = 19;
    /**
     * <code>STOCK_EXCEPTION = 20;</code>
     */
    public static final int STOCK_EXCEPTION_VALUE = 20;
    /**
     * <code>STOCK_FINISH = 21;</code>
     */
    public static final int STOCK_FINISH_VALUE = 21;
    /**
     * <code>ROWROLLBACK = 50;</code>
     */
    public static final int ROWROLLBACK_VALUE = 50;
    /**
     * <code>ROW_CFA = 51;</code>
     */
    public static final int ROW_CFA_VALUE = 51;
    /**
     * <code>ROW_LMN = 52;</code>
     */
    public static final int ROW_LMN_VALUE = 52;
    /**
     * <code>ROW_LOCK = 53;</code>
     */
    public static final int ROW_LOCK_VALUE = 53;
    /**
     * <code>ROW_CHAIN = 54;</code>
     */
    public static final int ROW_CHAIN_VALUE = 54;
    /**
     * <code>ROW_MFC = 55;</code>
     */
    public static final int ROW_MFC_VALUE = 55;
    /**
     * <code>DDL_TRANSACTION = 56;</code>
     */
    public static final int DDL_TRANSACTION_VALUE = 56;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static EventType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EventType forNumber(int value) {
      switch (value) {
        case 0: return EVENTTYPECOMPATIBLEPROTO2;
        case 1: return INSERT;
        case 2: return UPDATE;
        case 3: return DELETE;
        case 4: return CREATE;
        case 5: return ALTER;
        case 6: return ERASE;
        case 7: return QUERY;
        case 8: return TRUNCATE;
        case 9: return RENAME;
        case 10: return CINDEX;
        case 11: return DINDEX;
        case 12: return GTID;
        case 13: return XACOMMIT;
        case 14: return XAROLLBACK;
        case 15: return MHEARTBEAT;
        case 16: return DROP;
        case 17: return LOB_SLICE;
        case 18: return OBJECT_EXCEPTION;
        case 19: return OBJECT_FINISH;
        case 20: return STOCK_EXCEPTION;
        case 21: return STOCK_FINISH;
        case 50: return ROWROLLBACK;
        case 51: return ROW_CFA;
        case 52: return ROW_LMN;
        case 53: return ROW_LOCK;
        case 54: return ROW_CHAIN;
        case 55: return ROW_MFC;
        case 56: return DDL_TRANSACTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
            public EventType findValueByNumber(int number) {
              return EventType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DSyncEntry.getDescriptor().getEnumTypes().get(1);
    }

    private static final EventType[] VALUES = values();

    public static EventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EventType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mchz.kafkadataformatinput.formatmodel.EventType)
  }

  /**
   * <pre>
   **数据库类型*
   * </pre>
   *
   * Protobuf enum {@code com.mchz.kafkadataformatinput.formatmodel.Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TYPECOMPATIBLEPROTO2 = 0;</code>
     */
    TYPECOMPATIBLEPROTO2(0),
    /**
     * <code>ORACLE = 1;</code>
     */
    ORACLE(1),
    /**
     * <code>MYSQL = 2;</code>
     */
    MYSQL(2),
    /**
     * <code>POSTGRESQL = 3;</code>
     */
    POSTGRESQL(3),
    /**
     * <code>SQLSERVER = 4;</code>
     */
    SQLSERVER(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TYPECOMPATIBLEPROTO2 = 0;</code>
     */
    public static final int TYPECOMPATIBLEPROTO2_VALUE = 0;
    /**
     * <code>ORACLE = 1;</code>
     */
    public static final int ORACLE_VALUE = 1;
    /**
     * <code>MYSQL = 2;</code>
     */
    public static final int MYSQL_VALUE = 2;
    /**
     * <code>POSTGRESQL = 3;</code>
     */
    public static final int POSTGRESQL_VALUE = 3;
    /**
     * <code>SQLSERVER = 4;</code>
     */
    public static final int SQLSERVER_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Type forNumber(int value) {
      switch (value) {
        case 0: return TYPECOMPATIBLEPROTO2;
        case 1: return ORACLE;
        case 2: return MYSQL;
        case 3: return POSTGRESQL;
        case 4: return SQLSERVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DSyncEntry.getDescriptor().getEnumTypes().get(2);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mchz.kafkadataformatinput.formatmodel.Type)
  }

  /**
   * <pre>
   *对象类型
   * </pre>
   *
   * Protobuf enum {@code com.mchz.kafkadataformatinput.formatmodel.ObjectType}
   */
  public enum ObjectType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OBJECTTYPECOMPATIBLEPROTO2 = 0;</code>
     */
    OBJECTTYPECOMPATIBLEPROTO2(0),
    /**
     * <code>PARTITION_FUNCTION = 1;</code>
     */
    PARTITION_FUNCTION(1),
    /**
     * <code>PARTITION_SCHEMA = 2;</code>
     */
    PARTITION_SCHEMA(2),
    /**
     * <code>TYPE = 3;</code>
     */
    TYPE(3),
    /**
     * <code>TYPE_BODY = 4;</code>
     */
    TYPE_BODY(4),
    /**
     * <code>CLUSTER = 5;</code>
     */
    CLUSTER(5),
    /**
     * <code>SEQUENCE = 6;</code>
     */
    SEQUENCE(6),
    /**
     * <code>RULE = 7;</code>
     */
    RULE(7),
    /**
     * <code>TABLE = 8;</code>
     */
    TABLE(8),
    /**
     * <code>OBJECT_COMMENT = 9;</code>
     */
    OBJECT_COMMENT(9),
    /**
     * <code>COLUMN_COMMENT = 10;</code>
     */
    COLUMN_COMMENT(10),
    /**
     * <code>PK_CONSTRAINT = 11;</code>
     */
    PK_CONSTRAINT(11),
    /**
     * <code>UNI_CONSTRAINT = 12;</code>
     */
    UNI_CONSTRAINT(12),
    /**
     * <code>CHECK_CONSTRAINT = 13;</code>
     */
    CHECK_CONSTRAINT(13),
    /**
     * <code>FK_CONSTRAINT = 14;</code>
     */
    FK_CONSTRAINT(14),
    /**
     * <code>DEF_CONSTRAINT = 15;</code>
     */
    DEF_CONSTRAINT(15),
    /**
     * <code>INDEX = 16;</code>
     */
    INDEX(16),
    /**
     * <code>VIEW = 17;</code>
     */
    VIEW(17),
    /**
     * <code>FUNCTION = 18;</code>
     */
    FUNCTION(18),
    /**
     * <code>TRIGGER = 19;</code>
     */
    TRIGGER(19),
    /**
     * <code>PROCEDURE = 20;</code>
     */
    PROCEDURE(20),
    /**
     * <code>PACKAGE = 21;</code>
     */
    PACKAGE(21),
    /**
     * <code>DATABASE = 22;</code>
     */
    DATABASE(22),
    /**
     * <code>DB_LINK = 23;</code>
     */
    DB_LINK(23),
    /**
     * <code>EVENT = 24;</code>
     */
    EVENT(24),
    /**
     * <code>SYSTEM = 25;</code>
     */
    SYSTEM(25),
    /**
     * <code>MATERIALIZED_VIEW_LOG = 26;</code>
     */
    MATERIALIZED_VIEW_LOG(26),
    /**
     * <code>MATERIALIZED_VIEW = 27;</code>
     */
    MATERIALIZED_VIEW(27),
    /**
     * <code>SYNONYM = 28;</code>
     */
    SYNONYM(28),
    /**
     * <code>PACKAGE_BODY = 29;</code>
     */
    PACKAGE_BODY(29),
    /**
     * <code>EXCLUDE_CONSTRAINT = 30;</code>
     */
    EXCLUDE_CONSTRAINT(30),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OBJECTTYPECOMPATIBLEPROTO2 = 0;</code>
     */
    public static final int OBJECTTYPECOMPATIBLEPROTO2_VALUE = 0;
    /**
     * <code>PARTITION_FUNCTION = 1;</code>
     */
    public static final int PARTITION_FUNCTION_VALUE = 1;
    /**
     * <code>PARTITION_SCHEMA = 2;</code>
     */
    public static final int PARTITION_SCHEMA_VALUE = 2;
    /**
     * <code>TYPE = 3;</code>
     */
    public static final int TYPE_VALUE = 3;
    /**
     * <code>TYPE_BODY = 4;</code>
     */
    public static final int TYPE_BODY_VALUE = 4;
    /**
     * <code>CLUSTER = 5;</code>
     */
    public static final int CLUSTER_VALUE = 5;
    /**
     * <code>SEQUENCE = 6;</code>
     */
    public static final int SEQUENCE_VALUE = 6;
    /**
     * <code>RULE = 7;</code>
     */
    public static final int RULE_VALUE = 7;
    /**
     * <code>TABLE = 8;</code>
     */
    public static final int TABLE_VALUE = 8;
    /**
     * <code>OBJECT_COMMENT = 9;</code>
     */
    public static final int OBJECT_COMMENT_VALUE = 9;
    /**
     * <code>COLUMN_COMMENT = 10;</code>
     */
    public static final int COLUMN_COMMENT_VALUE = 10;
    /**
     * <code>PK_CONSTRAINT = 11;</code>
     */
    public static final int PK_CONSTRAINT_VALUE = 11;
    /**
     * <code>UNI_CONSTRAINT = 12;</code>
     */
    public static final int UNI_CONSTRAINT_VALUE = 12;
    /**
     * <code>CHECK_CONSTRAINT = 13;</code>
     */
    public static final int CHECK_CONSTRAINT_VALUE = 13;
    /**
     * <code>FK_CONSTRAINT = 14;</code>
     */
    public static final int FK_CONSTRAINT_VALUE = 14;
    /**
     * <code>DEF_CONSTRAINT = 15;</code>
     */
    public static final int DEF_CONSTRAINT_VALUE = 15;
    /**
     * <code>INDEX = 16;</code>
     */
    public static final int INDEX_VALUE = 16;
    /**
     * <code>VIEW = 17;</code>
     */
    public static final int VIEW_VALUE = 17;
    /**
     * <code>FUNCTION = 18;</code>
     */
    public static final int FUNCTION_VALUE = 18;
    /**
     * <code>TRIGGER = 19;</code>
     */
    public static final int TRIGGER_VALUE = 19;
    /**
     * <code>PROCEDURE = 20;</code>
     */
    public static final int PROCEDURE_VALUE = 20;
    /**
     * <code>PACKAGE = 21;</code>
     */
    public static final int PACKAGE_VALUE = 21;
    /**
     * <code>DATABASE = 22;</code>
     */
    public static final int DATABASE_VALUE = 22;
    /**
     * <code>DB_LINK = 23;</code>
     */
    public static final int DB_LINK_VALUE = 23;
    /**
     * <code>EVENT = 24;</code>
     */
    public static final int EVENT_VALUE = 24;
    /**
     * <code>SYSTEM = 25;</code>
     */
    public static final int SYSTEM_VALUE = 25;
    /**
     * <code>MATERIALIZED_VIEW_LOG = 26;</code>
     */
    public static final int MATERIALIZED_VIEW_LOG_VALUE = 26;
    /**
     * <code>MATERIALIZED_VIEW = 27;</code>
     */
    public static final int MATERIALIZED_VIEW_VALUE = 27;
    /**
     * <code>SYNONYM = 28;</code>
     */
    public static final int SYNONYM_VALUE = 28;
    /**
     * <code>PACKAGE_BODY = 29;</code>
     */
    public static final int PACKAGE_BODY_VALUE = 29;
    /**
     * <code>EXCLUDE_CONSTRAINT = 30;</code>
     */
    public static final int EXCLUDE_CONSTRAINT_VALUE = 30;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ObjectType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ObjectType forNumber(int value) {
      switch (value) {
        case 0: return OBJECTTYPECOMPATIBLEPROTO2;
        case 1: return PARTITION_FUNCTION;
        case 2: return PARTITION_SCHEMA;
        case 3: return TYPE;
        case 4: return TYPE_BODY;
        case 5: return CLUSTER;
        case 6: return SEQUENCE;
        case 7: return RULE;
        case 8: return TABLE;
        case 9: return OBJECT_COMMENT;
        case 10: return COLUMN_COMMENT;
        case 11: return PK_CONSTRAINT;
        case 12: return UNI_CONSTRAINT;
        case 13: return CHECK_CONSTRAINT;
        case 14: return FK_CONSTRAINT;
        case 15: return DEF_CONSTRAINT;
        case 16: return INDEX;
        case 17: return VIEW;
        case 18: return FUNCTION;
        case 19: return TRIGGER;
        case 20: return PROCEDURE;
        case 21: return PACKAGE;
        case 22: return DATABASE;
        case 23: return DB_LINK;
        case 24: return EVENT;
        case 25: return SYSTEM;
        case 26: return MATERIALIZED_VIEW_LOG;
        case 27: return MATERIALIZED_VIEW;
        case 28: return SYNONYM;
        case 29: return PACKAGE_BODY;
        case 30: return EXCLUDE_CONSTRAINT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ObjectType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ObjectType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ObjectType>() {
            public ObjectType findValueByNumber(int number) {
              return ObjectType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DSyncEntry.getDescriptor().getEnumTypes().get(3);
    }

    private static final ObjectType[] VALUES = values();

    public static ObjectType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ObjectType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mchz.kafkadataformatinput.formatmodel.ObjectType)
  }

  public interface EntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mchz.kafkadataformatinput.formatmodel.Entry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     **协议头部信息*
     * </pre>
     *
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <pre>
     **协议头部信息*
     * </pre>
     *
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
     * @return The header.
     */
    Header getHeader();
    /**
     * <pre>
     **协议头部信息*
     * </pre>
     *
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
     */
    HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.EntryType entryType = 2;</code>
     * @return The enum numeric value on the wire for entryType.
     */
    int getEntryTypeValue();
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.EntryType entryType = 2;</code>
     * @return The entryType.
     */
    EntryType getEntryType();

    /**
     * <pre>
     **传输的二进制数组*
     * </pre>
     *
     * <code>bytes storeValue = 3;</code>
     * @return The storeValue.
     */
    com.google.protobuf.ByteString getStoreValue();

    public Entry.EntryTypePresentCase getEntryTypePresentCase();
  }
  /**
   * <pre>
   ****************************************************************
   * message model
   *如果要在Enum中新增类型，确保以前的类型的下标值不变.
   ***************************************************************
   * </pre>
   *
   * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.Entry}
   */
  public  static final class Entry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mchz.kafkadataformatinput.formatmodel.Entry)
      EntryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Entry.newBuilder() to construct.
    private Entry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Entry() {
      storeValue_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Entry();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Entry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              entryTypePresentCase_ = 2;
              entryTypePresent_ = rawValue;
              break;
            }
            case 26: {

              storeValue_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Entry.class, Builder.class);
    }

    private int entryTypePresentCase_ = 0;
    private Object entryTypePresent_;
    public enum EntryTypePresentCase
        implements com.google.protobuf.Internal.EnumLite,
            InternalOneOfEnum {
      ENTRYTYPE(2),
      ENTRYTYPEPRESENT_NOT_SET(0);
      private final int value;
      private EntryTypePresentCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static EntryTypePresentCase valueOf(int value) {
        return forNumber(value);
      }

      public static EntryTypePresentCase forNumber(int value) {
        switch (value) {
          case 2: return ENTRYTYPE;
          case 0: return ENTRYTYPEPRESENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public EntryTypePresentCase
    getEntryTypePresentCase() {
      return EntryTypePresentCase.forNumber(
          entryTypePresentCase_);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private Header header_;
    /**
     * <pre>
     **协议头部信息*
     * </pre>
     *
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <pre>
     **协议头部信息*
     * </pre>
     *
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
     * @return The header.
     */
    public Header getHeader() {
      return header_ == null ? Header.getDefaultInstance() : header_;
    }
    /**
     * <pre>
     **协议头部信息*
     * </pre>
     *
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
     */
    public HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int ENTRYTYPE_FIELD_NUMBER = 2;
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.EntryType entryType = 2;</code>
     * @return The enum numeric value on the wire for entryType.
     */
    public int getEntryTypeValue() {
      if (entryTypePresentCase_ == 2) {
        return (Integer) entryTypePresent_;
      }
      return 0;
    }
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.EntryType entryType = 2;</code>
     * @return The entryType.
     */
    public EntryType getEntryType() {
      if (entryTypePresentCase_ == 2) {
        @SuppressWarnings("deprecation")
        EntryType result = EntryType.valueOf(
            (Integer) entryTypePresent_);
        return result == null ? EntryType.UNRECOGNIZED : result;
      }
      return EntryType.ENTRYTYPECOMPATIBLEPROTO2;
    }

    public static final int STOREVALUE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString storeValue_;
    /**
     * <pre>
     **传输的二进制数组*
     * </pre>
     *
     * <code>bytes storeValue = 3;</code>
     * @return The storeValue.
     */
    public com.google.protobuf.ByteString getStoreValue() {
      return storeValue_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (entryTypePresentCase_ == 2) {
        output.writeEnum(2, ((Integer) entryTypePresent_));
      }
      if (!storeValue_.isEmpty()) {
        output.writeBytes(3, storeValue_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (entryTypePresentCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ((Integer) entryTypePresent_));
      }
      if (!storeValue_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, storeValue_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Entry)) {
        return super.equals(obj);
      }
      Entry other = (Entry) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (!getStoreValue()
          .equals(other.getStoreValue())) return false;
      if (!getEntryTypePresentCase().equals(other.getEntryTypePresentCase())) return false;
      switch (entryTypePresentCase_) {
        case 2:
          if (getEntryTypeValue()
              != other.getEntryTypeValue()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      hash = (37 * hash) + STOREVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getStoreValue().hashCode();
      switch (entryTypePresentCase_) {
        case 2:
          hash = (37 * hash) + ENTRYTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getEntryTypeValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Entry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Entry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Entry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Entry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Entry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Entry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Entry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Entry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Entry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Entry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Entry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Entry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Entry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ****************************************************************
     * message model
     *如果要在Enum中新增类型，确保以前的类型的下标值不变.
     ***************************************************************
     * </pre>
     *
     * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.Entry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mchz.kafkadataformatinput.formatmodel.Entry)
        EntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Entry.class, Builder.class);
      }

      // Construct using com.mchz.kafkadataformatinput.formatmodel.DSyncEntry.Entry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        storeValue_ = com.google.protobuf.ByteString.EMPTY;

        entryTypePresentCase_ = 0;
        entryTypePresent_ = null;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_descriptor;
      }

      @Override
      public Entry getDefaultInstanceForType() {
        return Entry.getDefaultInstance();
      }

      @Override
      public Entry build() {
        Entry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Entry buildPartial() {
        Entry result = new Entry(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (entryTypePresentCase_ == 2) {
          result.entryTypePresent_ = entryTypePresent_;
        }
        result.storeValue_ = storeValue_;
        result.entryTypePresentCase_ = entryTypePresentCase_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Entry) {
          return mergeFrom((Entry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Entry other) {
        if (other == Entry.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.getStoreValue() != com.google.protobuf.ByteString.EMPTY) {
          setStoreValue(other.getStoreValue());
        }
        switch (other.getEntryTypePresentCase()) {
          case ENTRYTYPE: {
            setEntryTypeValue(other.getEntryTypeValue());
            break;
          }
          case ENTRYTYPEPRESENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Entry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Entry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int entryTypePresentCase_ = 0;
      private Object entryTypePresent_;
      public EntryTypePresentCase
          getEntryTypePresentCase() {
        return EntryTypePresentCase.forNumber(
            entryTypePresentCase_);
      }

      public Builder clearEntryTypePresent() {
        entryTypePresentCase_ = 0;
        entryTypePresent_ = null;
        onChanged();
        return this;
      }


      private Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Header, Header.Builder, HeaderOrBuilder> headerBuilder_;
      /**
       * <pre>
       **协议头部信息*
       * </pre>
       *
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <pre>
       **协议头部信息*
       * </pre>
       *
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
       * @return The header.
       */
      public Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       **协议头部信息*
       * </pre>
       *
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
       */
      public Builder setHeader(Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       **协议头部信息*
       * </pre>
       *
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
       */
      public Builder setHeader(
          Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       **协议头部信息*
       * </pre>
       *
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
       */
      public Builder mergeHeader(Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       **协议头部信息*
       * </pre>
       *
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       **协议头部信息*
       * </pre>
       *
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
       */
      public Header.Builder getHeaderBuilder() {

        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       **协议头部信息*
       * </pre>
       *
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
       */
      public HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <pre>
       **协议头部信息*
       * </pre>
       *
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Header, Header.Builder, HeaderOrBuilder>
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Header, Header.Builder, HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EntryType entryType = 2;</code>
       * @return The enum numeric value on the wire for entryType.
       */
      public int getEntryTypeValue() {
        if (entryTypePresentCase_ == 2) {
          return ((Integer) entryTypePresent_).intValue();
        }
        return 0;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EntryType entryType = 2;</code>
       * @param value The enum numeric value on the wire for entryType to set.
       * @return This builder for chaining.
       */
      public Builder setEntryTypeValue(int value) {
        entryTypePresentCase_ = 2;
        entryTypePresent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EntryType entryType = 2;</code>
       * @return The entryType.
       */
      public EntryType getEntryType() {
        if (entryTypePresentCase_ == 2) {
          @SuppressWarnings("deprecation")
          EntryType result = EntryType.valueOf(
              (Integer) entryTypePresent_);
          return result == null ? EntryType.UNRECOGNIZED : result;
        }
        return EntryType.ENTRYTYPECOMPATIBLEPROTO2;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EntryType entryType = 2;</code>
       * @param value The entryType to set.
       * @return This builder for chaining.
       */
      public Builder setEntryType(EntryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        entryTypePresentCase_ = 2;
        entryTypePresent_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EntryType entryType = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEntryType() {
        if (entryTypePresentCase_ == 2) {
          entryTypePresentCase_ = 0;
          entryTypePresent_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.ByteString storeValue_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       **传输的二进制数组*
       * </pre>
       *
       * <code>bytes storeValue = 3;</code>
       * @return The storeValue.
       */
      public com.google.protobuf.ByteString getStoreValue() {
        return storeValue_;
      }
      /**
       * <pre>
       **传输的二进制数组*
       * </pre>
       *
       * <code>bytes storeValue = 3;</code>
       * @param value The storeValue to set.
       * @return This builder for chaining.
       */
      public Builder setStoreValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }

        storeValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **传输的二进制数组*
       * </pre>
       *
       * <code>bytes storeValue = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStoreValue() {

        storeValue_ = getDefaultInstance().getStoreValue();
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.mchz.kafkadataformatinput.formatmodel.Entry)
    }

    // @@protoc_insertion_point(class_scope:com.mchz.kafkadataformatinput.formatmodel.Entry)
    private static final Entry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Entry();
    }

    public static Entry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Entry>
        PARSER = new com.google.protobuf.AbstractParser<Entry>() {
      @Override
      public Entry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Entry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Entry> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Entry> getParserForType() {
      return PARSER;
    }

    @Override
    public Entry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mchz.kafkadataformatinput.formatmodel.Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 version = 1;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     **binlog/redolog 文件名*
     * </pre>
     *
     * <code>string logfileName = 2;</code>
     * @return The logfileName.
     */
    String getLogfileName();
    /**
     * <pre>
     **binlog/redolog 文件名*
     * </pre>
     *
     * <code>string logfileName = 2;</code>
     * @return The bytes for logfileName.
     */
    com.google.protobuf.ByteString
        getLogfileNameBytes();

    /**
     * <pre>
     **binlog/redolog 文件的偏移位置*
     * </pre>
     *
     * <code>int64 logfileOffset = 3;</code>
     * @return The logfileOffset.
     */
    long getLogfileOffset();

    /**
     * <pre>
     **服务端serverId*
     * </pre>
     *
     * <code>int64 serverId = 4;</code>
     * @return The serverId.
     */
    long getServerId();

    /**
     * <pre>
     ** 变更数据的编码 *
     * </pre>
     *
     * <code>string serverenCode = 5;</code>
     * @return The serverenCode.
     */
    String getServerenCode();
    /**
     * <pre>
     ** 变更数据的编码 *
     * </pre>
     *
     * <code>string serverenCode = 5;</code>
     * @return The bytes for serverenCode.
     */
    com.google.protobuf.ByteString
        getServerenCodeBytes();

    /**
     * <pre>
     **变更数据的执行时间 *
     * </pre>
     *
     * <code>int64 executeTime = 6;</code>
     * @return The executeTime.
     */
    long getExecuteTime();

    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Type sourceType = 7;</code>
     * @return The enum numeric value on the wire for sourceType.
     */
    int getSourceTypeValue();
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Type sourceType = 7;</code>
     * @return The sourceType.
     */
    Type getSourceType();

    /**
     * <code>string catalog = 8;</code>
     * @return The catalog.
     */
    String getCatalog();
    /**
     * <code>string catalog = 8;</code>
     * @return The bytes for catalog.
     */
    com.google.protobuf.ByteString
        getCatalogBytes();

    /**
     * <pre>
     ** 变更数据的schemaname*
     * </pre>
     *
     * <code>string schemaName = 9;</code>
     * @return The schemaName.
     */
    String getSchemaName();
    /**
     * <pre>
     ** 变更数据的schemaname*
     * </pre>
     *
     * <code>string schemaName = 9;</code>
     * @return The bytes for schemaName.
     */
    com.google.protobuf.ByteString
        getSchemaNameBytes();

    /**
     * <pre>
     **变更数据的object name*
     * </pre>
     *
     * <code>string objectName = 10;</code>
     * @return The objectName.
     */
    String getObjectName();
    /**
     * <pre>
     **变更数据的object name*
     * </pre>
     *
     * <code>string objectName = 10;</code>
     * @return The bytes for objectName.
     */
    com.google.protobuf.ByteString
        getObjectNameBytes();

    /**
     * <pre>
     **每个event的长度*
     * </pre>
     *
     * <code>int64 eventLength = 11;</code>
     * @return The eventLength.
     */
    long getEventLength();

    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.EventType eventType = 12;</code>
     * @return The enum numeric value on the wire for eventType.
     */
    int getEventTypeValue();
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.EventType eventType = 12;</code>
     * @return The eventType.
     */
    EventType getEventType();

    /**
     * <pre>
     **mysql当前事务的gtid*
     * </pre>
     *
     * <code>string transactionId = 13;</code>
     * @return The transactionId.
     */
    String getTransactionId();
    /**
     * <pre>
     **mysql当前事务的gtid*
     * </pre>
     *
     * <code>string transactionId = 13;</code>
     * @return The bytes for transactionId.
     */
    com.google.protobuf.ByteString
        getTransactionIdBytes();

    /**
     * <code>string relativeName = 14;</code>
     * @return The relativeName.
     */
    String getRelativeName();
    /**
     * <code>string relativeName = 14;</code>
     * @return The bytes for relativeName.
     */
    com.google.protobuf.ByteString
        getRelativeNameBytes();

    /**
     * <pre>
     ** mysql为当前数据库binglog文件偏移;oracle为当前数据库SCN; sqlserver为查询当前数据库LSN *
     * </pre>
     *
     * <code>string lastChangeNumber = 15;</code>
     * @return The lastChangeNumber.
     */
    String getLastChangeNumber();
    /**
     * <pre>
     ** mysql为当前数据库binglog文件偏移;oracle为当前数据库SCN; sqlserver为查询当前数据库LSN *
     * </pre>
     *
     * <code>string lastChangeNumber = 15;</code>
     * @return The bytes for lastChangeNumber.
     */
    com.google.protobuf.ByteString
        getLastChangeNumberBytes();

    /**
     * <pre>
     **tableId,由数据库产生*
     * </pre>
     *
     * <code>int64 tableId = 16;</code>
     * @return The tableId.
     */
    long getTableId();

    /**
     * <code>bool isDdl = 17;</code>
     * @return The isDdl.
     */
    boolean getIsDdl();

    /**
     * <pre>
     ** ddl/query的schemaName，会存在跨库ddl，需要保留执行ddl的当前schemaName  *
     * </pre>
     *
     * <code>string ddlSchemaName = 18;</code>
     * @return The ddlSchemaName.
     */
    String getDdlSchemaName();
    /**
     * <pre>
     ** ddl/query的schemaName，会存在跨库ddl，需要保留执行ddl的当前schemaName  *
     * </pre>
     *
     * <code>string ddlSchemaName = 18;</code>
     * @return The bytes for ddlSchemaName.
     */
    com.google.protobuf.ByteString
        getDdlSchemaNameBytes();

    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.ObjectType objectType = 19;</code>
     * @return The enum numeric value on the wire for objectType.
     */
    int getObjectTypeValue();
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.ObjectType objectType = 19;</code>
     * @return The objectType.
     */
    ObjectType getObjectType();

    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
     * @return Whether the slicePoint field is set.
     */
    boolean hasSlicePoint();
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
     * @return The slicePoint.
     */
    SlicePoint getSlicePoint();
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
     */
    SlicePointOrBuilder getSlicePointOrBuilder();

    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    java.util.List<Pair>
        getPropsList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    Pair getProps(int index);
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    PairOrBuilder getPropsOrBuilder(
        int index);

    public Header.VersionPresentCase getVersionPresentCase();

    public Header.SourceTypePresentCase getSourceTypePresentCase();

    public Header.EventTypePresentCase getEventTypePresentCase();

    public Header.IsDdlPresentCase getIsDdlPresentCase();

    public Header.ObjectTypePresentCase getObjectTypePresentCase();
  }
  /**
   * <pre>
   **message Header*
   * </pre>
   *
   * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.Header}
   */
  public  static final class Header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mchz.kafkadataformatinput.formatmodel.Header)
      HeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Header() {
      logfileName_ = "";
      serverenCode_ = "";
      catalog_ = "";
      schemaName_ = "";
      objectName_ = "";
      transactionId_ = "";
      relativeName_ = "";
      lastChangeNumber_ = "";
      ddlSchemaName_ = "";
      props_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Header();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              versionPresentCase_ = 1;
              versionPresent_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              logfileName_ = s;
              break;
            }
            case 24: {

              logfileOffset_ = input.readInt64();
              break;
            }
            case 32: {

              serverId_ = input.readInt64();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              serverenCode_ = s;
              break;
            }
            case 48: {

              executeTime_ = input.readInt64();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              sourceTypePresentCase_ = 7;
              sourceTypePresent_ = rawValue;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              catalog_ = s;
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              schemaName_ = s;
              break;
            }
            case 82: {
              String s = input.readStringRequireUtf8();

              objectName_ = s;
              break;
            }
            case 88: {

              eventLength_ = input.readInt64();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              eventTypePresentCase_ = 12;
              eventTypePresent_ = rawValue;
              break;
            }
            case 106: {
              String s = input.readStringRequireUtf8();

              transactionId_ = s;
              break;
            }
            case 114: {
              String s = input.readStringRequireUtf8();

              relativeName_ = s;
              break;
            }
            case 122: {
              String s = input.readStringRequireUtf8();

              lastChangeNumber_ = s;
              break;
            }
            case 128: {

              tableId_ = input.readInt64();
              break;
            }
            case 136: {
              isDdlPresentCase_ = 17;
              isDdlPresent_ = input.readBool();
              break;
            }
            case 146: {
              String s = input.readStringRequireUtf8();

              ddlSchemaName_ = s;
              break;
            }
            case 152: {
              int rawValue = input.readEnum();
              objectTypePresentCase_ = 19;
              objectTypePresent_ = rawValue;
              break;
            }
            case 162: {
              SlicePoint.Builder subBuilder = null;
              if (slicePoint_ != null) {
                subBuilder = slicePoint_.toBuilder();
              }
              slicePoint_ = input.readMessage(SlicePoint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(slicePoint_);
                slicePoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                props_ = new java.util.ArrayList<Pair>();
                mutable_bitField0_ |= 0x00000001;
              }
              props_.add(
                  input.readMessage(Pair.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Header.class, Builder.class);
    }

    private int versionPresentCase_ = 0;
    private Object versionPresent_;
    public enum VersionPresentCase
        implements com.google.protobuf.Internal.EnumLite,
            InternalOneOfEnum {
      VERSION(1),
      VERSIONPRESENT_NOT_SET(0);
      private final int value;
      private VersionPresentCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static VersionPresentCase valueOf(int value) {
        return forNumber(value);
      }

      public static VersionPresentCase forNumber(int value) {
        switch (value) {
          case 1: return VERSION;
          case 0: return VERSIONPRESENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public VersionPresentCase
    getVersionPresentCase() {
      return VersionPresentCase.forNumber(
          versionPresentCase_);
    }

    private int sourceTypePresentCase_ = 0;
    private Object sourceTypePresent_;
    public enum SourceTypePresentCase
        implements com.google.protobuf.Internal.EnumLite,
            InternalOneOfEnum {
      SOURCETYPE(7),
      SOURCETYPEPRESENT_NOT_SET(0);
      private final int value;
      private SourceTypePresentCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static SourceTypePresentCase valueOf(int value) {
        return forNumber(value);
      }

      public static SourceTypePresentCase forNumber(int value) {
        switch (value) {
          case 7: return SOURCETYPE;
          case 0: return SOURCETYPEPRESENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SourceTypePresentCase
    getSourceTypePresentCase() {
      return SourceTypePresentCase.forNumber(
          sourceTypePresentCase_);
    }

    private int eventTypePresentCase_ = 0;
    private Object eventTypePresent_;
    public enum EventTypePresentCase
        implements com.google.protobuf.Internal.EnumLite,
            InternalOneOfEnum {
      EVENTTYPE(12),
      EVENTTYPEPRESENT_NOT_SET(0);
      private final int value;
      private EventTypePresentCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static EventTypePresentCase valueOf(int value) {
        return forNumber(value);
      }

      public static EventTypePresentCase forNumber(int value) {
        switch (value) {
          case 12: return EVENTTYPE;
          case 0: return EVENTTYPEPRESENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public EventTypePresentCase
    getEventTypePresentCase() {
      return EventTypePresentCase.forNumber(
          eventTypePresentCase_);
    }

    private int isDdlPresentCase_ = 0;
    private Object isDdlPresent_;
    public enum IsDdlPresentCase
        implements com.google.protobuf.Internal.EnumLite,
            InternalOneOfEnum {
      ISDDL(17),
      ISDDLPRESENT_NOT_SET(0);
      private final int value;
      private IsDdlPresentCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static IsDdlPresentCase valueOf(int value) {
        return forNumber(value);
      }

      public static IsDdlPresentCase forNumber(int value) {
        switch (value) {
          case 17: return ISDDL;
          case 0: return ISDDLPRESENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public IsDdlPresentCase
    getIsDdlPresentCase() {
      return IsDdlPresentCase.forNumber(
          isDdlPresentCase_);
    }

    private int objectTypePresentCase_ = 0;
    private Object objectTypePresent_;
    public enum ObjectTypePresentCase
        implements com.google.protobuf.Internal.EnumLite,
            InternalOneOfEnum {
      OBJECTTYPE(19),
      OBJECTTYPEPRESENT_NOT_SET(0);
      private final int value;
      private ObjectTypePresentCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static ObjectTypePresentCase valueOf(int value) {
        return forNumber(value);
      }

      public static ObjectTypePresentCase forNumber(int value) {
        switch (value) {
          case 19: return OBJECTTYPE;
          case 0: return OBJECTTYPEPRESENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ObjectTypePresentCase
    getObjectTypePresentCase() {
      return ObjectTypePresentCase.forNumber(
          objectTypePresentCase_);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    /**
     * <code>int32 version = 1;</code>
     * @return The version.
     */
    public int getVersion() {
      if (versionPresentCase_ == 1) {
        return (Integer) versionPresent_;
      }
      return 0;
    }

    public static final int LOGFILENAME_FIELD_NUMBER = 2;
    private volatile Object logfileName_;
    /**
     * <pre>
     **binlog/redolog 文件名*
     * </pre>
     *
     * <code>string logfileName = 2;</code>
     * @return The logfileName.
     */
    public String getLogfileName() {
      Object ref = logfileName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        logfileName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     **binlog/redolog 文件名*
     * </pre>
     *
     * <code>string logfileName = 2;</code>
     * @return The bytes for logfileName.
     */
    public com.google.protobuf.ByteString
        getLogfileNameBytes() {
      Object ref = logfileName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        logfileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGFILEOFFSET_FIELD_NUMBER = 3;
    private long logfileOffset_;
    /**
     * <pre>
     **binlog/redolog 文件的偏移位置*
     * </pre>
     *
     * <code>int64 logfileOffset = 3;</code>
     * @return The logfileOffset.
     */
    public long getLogfileOffset() {
      return logfileOffset_;
    }

    public static final int SERVERID_FIELD_NUMBER = 4;
    private long serverId_;
    /**
     * <pre>
     **服务端serverId*
     * </pre>
     *
     * <code>int64 serverId = 4;</code>
     * @return The serverId.
     */
    public long getServerId() {
      return serverId_;
    }

    public static final int SERVERENCODE_FIELD_NUMBER = 5;
    private volatile Object serverenCode_;
    /**
     * <pre>
     ** 变更数据的编码 *
     * </pre>
     *
     * <code>string serverenCode = 5;</code>
     * @return The serverenCode.
     */
    public String getServerenCode() {
      Object ref = serverenCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serverenCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 变更数据的编码 *
     * </pre>
     *
     * <code>string serverenCode = 5;</code>
     * @return The bytes for serverenCode.
     */
    public com.google.protobuf.ByteString
        getServerenCodeBytes() {
      Object ref = serverenCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serverenCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXECUTETIME_FIELD_NUMBER = 6;
    private long executeTime_;
    /**
     * <pre>
     **变更数据的执行时间 *
     * </pre>
     *
     * <code>int64 executeTime = 6;</code>
     * @return The executeTime.
     */
    public long getExecuteTime() {
      return executeTime_;
    }

    public static final int SOURCETYPE_FIELD_NUMBER = 7;
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Type sourceType = 7;</code>
     * @return The enum numeric value on the wire for sourceType.
     */
    public int getSourceTypeValue() {
      if (sourceTypePresentCase_ == 7) {
        return (Integer) sourceTypePresent_;
      }
      return 0;
    }
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.Type sourceType = 7;</code>
     * @return The sourceType.
     */
    public Type getSourceType() {
      if (sourceTypePresentCase_ == 7) {
        @SuppressWarnings("deprecation")
        Type result = Type.valueOf(
            (Integer) sourceTypePresent_);
        return result == null ? Type.UNRECOGNIZED : result;
      }
      return Type.TYPECOMPATIBLEPROTO2;
    }

    public static final int CATALOG_FIELD_NUMBER = 8;
    private volatile Object catalog_;
    /**
     * <code>string catalog = 8;</code>
     * @return The catalog.
     */
    public String getCatalog() {
      Object ref = catalog_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        catalog_ = s;
        return s;
      }
    }
    /**
     * <code>string catalog = 8;</code>
     * @return The bytes for catalog.
     */
    public com.google.protobuf.ByteString
        getCatalogBytes() {
      Object ref = catalog_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        catalog_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCHEMANAME_FIELD_NUMBER = 9;
    private volatile Object schemaName_;
    /**
     * <pre>
     ** 变更数据的schemaname*
     * </pre>
     *
     * <code>string schemaName = 9;</code>
     * @return The schemaName.
     */
    public String getSchemaName() {
      Object ref = schemaName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        schemaName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 变更数据的schemaname*
     * </pre>
     *
     * <code>string schemaName = 9;</code>
     * @return The bytes for schemaName.
     */
    public com.google.protobuf.ByteString
        getSchemaNameBytes() {
      Object ref = schemaName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        schemaName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECTNAME_FIELD_NUMBER = 10;
    private volatile Object objectName_;
    /**
     * <pre>
     **变更数据的object name*
     * </pre>
     *
     * <code>string objectName = 10;</code>
     * @return The objectName.
     */
    public String getObjectName() {
      Object ref = objectName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        objectName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     **变更数据的object name*
     * </pre>
     *
     * <code>string objectName = 10;</code>
     * @return The bytes for objectName.
     */
    public com.google.protobuf.ByteString
        getObjectNameBytes() {
      Object ref = objectName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        objectName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENTLENGTH_FIELD_NUMBER = 11;
    private long eventLength_;
    /**
     * <pre>
     **每个event的长度*
     * </pre>
     *
     * <code>int64 eventLength = 11;</code>
     * @return The eventLength.
     */
    public long getEventLength() {
      return eventLength_;
    }

    public static final int EVENTTYPE_FIELD_NUMBER = 12;
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.EventType eventType = 12;</code>
     * @return The enum numeric value on the wire for eventType.
     */
    public int getEventTypeValue() {
      if (eventTypePresentCase_ == 12) {
        return (Integer) eventTypePresent_;
      }
      return 0;
    }
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.EventType eventType = 12;</code>
     * @return The eventType.
     */
    public EventType getEventType() {
      if (eventTypePresentCase_ == 12) {
        @SuppressWarnings("deprecation")
        EventType result = EventType.valueOf(
            (Integer) eventTypePresent_);
        return result == null ? EventType.UNRECOGNIZED : result;
      }
      return EventType.EVENTTYPECOMPATIBLEPROTO2;
    }

    public static final int TRANSACTIONID_FIELD_NUMBER = 13;
    private volatile Object transactionId_;
    /**
     * <pre>
     **mysql当前事务的gtid*
     * </pre>
     *
     * <code>string transactionId = 13;</code>
     * @return The transactionId.
     */
    public String getTransactionId() {
      Object ref = transactionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        transactionId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     **mysql当前事务的gtid*
     * </pre>
     *
     * <code>string transactionId = 13;</code>
     * @return The bytes for transactionId.
     */
    public com.google.protobuf.ByteString
        getTransactionIdBytes() {
      Object ref = transactionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        transactionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RELATIVENAME_FIELD_NUMBER = 14;
    private volatile Object relativeName_;
    /**
     * <code>string relativeName = 14;</code>
     * @return The relativeName.
     */
    public String getRelativeName() {
      Object ref = relativeName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        relativeName_ = s;
        return s;
      }
    }
    /**
     * <code>string relativeName = 14;</code>
     * @return The bytes for relativeName.
     */
    public com.google.protobuf.ByteString
        getRelativeNameBytes() {
      Object ref = relativeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        relativeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTCHANGENUMBER_FIELD_NUMBER = 15;
    private volatile Object lastChangeNumber_;
    /**
     * <pre>
     ** mysql为当前数据库binglog文件偏移;oracle为当前数据库SCN; sqlserver为查询当前数据库LSN *
     * </pre>
     *
     * <code>string lastChangeNumber = 15;</code>
     * @return The lastChangeNumber.
     */
    public String getLastChangeNumber() {
      Object ref = lastChangeNumber_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        lastChangeNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** mysql为当前数据库binglog文件偏移;oracle为当前数据库SCN; sqlserver为查询当前数据库LSN *
     * </pre>
     *
     * <code>string lastChangeNumber = 15;</code>
     * @return The bytes for lastChangeNumber.
     */
    public com.google.protobuf.ByteString
        getLastChangeNumberBytes() {
      Object ref = lastChangeNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        lastChangeNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLEID_FIELD_NUMBER = 16;
    private long tableId_;
    /**
     * <pre>
     **tableId,由数据库产生*
     * </pre>
     *
     * <code>int64 tableId = 16;</code>
     * @return The tableId.
     */
    public long getTableId() {
      return tableId_;
    }

    public static final int ISDDL_FIELD_NUMBER = 17;
    /**
     * <code>bool isDdl = 17;</code>
     * @return The isDdl.
     */
    public boolean getIsDdl() {
      if (isDdlPresentCase_ == 17) {
        return (Boolean) isDdlPresent_;
      }
      return false;
    }

    public static final int DDLSCHEMANAME_FIELD_NUMBER = 18;
    private volatile Object ddlSchemaName_;
    /**
     * <pre>
     ** ddl/query的schemaName，会存在跨库ddl，需要保留执行ddl的当前schemaName  *
     * </pre>
     *
     * <code>string ddlSchemaName = 18;</code>
     * @return The ddlSchemaName.
     */
    public String getDdlSchemaName() {
      Object ref = ddlSchemaName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        ddlSchemaName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** ddl/query的schemaName，会存在跨库ddl，需要保留执行ddl的当前schemaName  *
     * </pre>
     *
     * <code>string ddlSchemaName = 18;</code>
     * @return The bytes for ddlSchemaName.
     */
    public com.google.protobuf.ByteString
        getDdlSchemaNameBytes() {
      Object ref = ddlSchemaName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ddlSchemaName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECTTYPE_FIELD_NUMBER = 19;
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.ObjectType objectType = 19;</code>
     * @return The enum numeric value on the wire for objectType.
     */
    public int getObjectTypeValue() {
      if (objectTypePresentCase_ == 19) {
        return (Integer) objectTypePresent_;
      }
      return 0;
    }
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.ObjectType objectType = 19;</code>
     * @return The objectType.
     */
    public ObjectType getObjectType() {
      if (objectTypePresentCase_ == 19) {
        @SuppressWarnings("deprecation")
        ObjectType result = ObjectType.valueOf(
            (Integer) objectTypePresent_);
        return result == null ? ObjectType.UNRECOGNIZED : result;
      }
      return ObjectType.OBJECTTYPECOMPATIBLEPROTO2;
    }

    public static final int SLICEPOINT_FIELD_NUMBER = 20;
    private SlicePoint slicePoint_;
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
     * @return Whether the slicePoint field is set.
     */
    public boolean hasSlicePoint() {
      return slicePoint_ != null;
    }
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
     * @return The slicePoint.
     */
    public SlicePoint getSlicePoint() {
      return slicePoint_ == null ? SlicePoint.getDefaultInstance() : slicePoint_;
    }
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
     */
    public SlicePointOrBuilder getSlicePointOrBuilder() {
      return getSlicePoint();
    }

    public static final int PROPS_FIELD_NUMBER = 21;
    private java.util.List<Pair> props_;
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    public java.util.List<Pair> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    public java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    public Pair getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
     */
    public PairOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (versionPresentCase_ == 1) {
        output.writeInt32(
            1, (int)((Integer) versionPresent_));
      }
      if (!getLogfileNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, logfileName_);
      }
      if (logfileOffset_ != 0L) {
        output.writeInt64(3, logfileOffset_);
      }
      if (serverId_ != 0L) {
        output.writeInt64(4, serverId_);
      }
      if (!getServerenCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, serverenCode_);
      }
      if (executeTime_ != 0L) {
        output.writeInt64(6, executeTime_);
      }
      if (sourceTypePresentCase_ == 7) {
        output.writeEnum(7, ((Integer) sourceTypePresent_));
      }
      if (!getCatalogBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, catalog_);
      }
      if (!getSchemaNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, schemaName_);
      }
      if (!getObjectNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, objectName_);
      }
      if (eventLength_ != 0L) {
        output.writeInt64(11, eventLength_);
      }
      if (eventTypePresentCase_ == 12) {
        output.writeEnum(12, ((Integer) eventTypePresent_));
      }
      if (!getTransactionIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, transactionId_);
      }
      if (!getRelativeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, relativeName_);
      }
      if (!getLastChangeNumberBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, lastChangeNumber_);
      }
      if (tableId_ != 0L) {
        output.writeInt64(16, tableId_);
      }
      if (isDdlPresentCase_ == 17) {
        output.writeBool(
            17, (boolean)((Boolean) isDdlPresent_));
      }
      if (!getDdlSchemaNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, ddlSchemaName_);
      }
      if (objectTypePresentCase_ == 19) {
        output.writeEnum(19, ((Integer) objectTypePresent_));
      }
      if (slicePoint_ != null) {
        output.writeMessage(20, getSlicePoint());
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(21, props_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (versionPresentCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              1, (int)((Integer) versionPresent_));
      }
      if (!getLogfileNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, logfileName_);
      }
      if (logfileOffset_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, logfileOffset_);
      }
      if (serverId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, serverId_);
      }
      if (!getServerenCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, serverenCode_);
      }
      if (executeTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, executeTime_);
      }
      if (sourceTypePresentCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, ((Integer) sourceTypePresent_));
      }
      if (!getCatalogBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, catalog_);
      }
      if (!getSchemaNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, schemaName_);
      }
      if (!getObjectNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, objectName_);
      }
      if (eventLength_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, eventLength_);
      }
      if (eventTypePresentCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, ((Integer) eventTypePresent_));
      }
      if (!getTransactionIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, transactionId_);
      }
      if (!getRelativeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, relativeName_);
      }
      if (!getLastChangeNumberBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, lastChangeNumber_);
      }
      if (tableId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, tableId_);
      }
      if (isDdlPresentCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              17, (boolean)((Boolean) isDdlPresent_));
      }
      if (!getDdlSchemaNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, ddlSchemaName_);
      }
      if (objectTypePresentCase_ == 19) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, ((Integer) objectTypePresent_));
      }
      if (slicePoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getSlicePoint());
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, props_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Header)) {
        return super.equals(obj);
      }
      Header other = (Header) obj;

      if (!getLogfileName()
          .equals(other.getLogfileName())) return false;
      if (getLogfileOffset()
          != other.getLogfileOffset()) return false;
      if (getServerId()
          != other.getServerId()) return false;
      if (!getServerenCode()
          .equals(other.getServerenCode())) return false;
      if (getExecuteTime()
          != other.getExecuteTime()) return false;
      if (!getCatalog()
          .equals(other.getCatalog())) return false;
      if (!getSchemaName()
          .equals(other.getSchemaName())) return false;
      if (!getObjectName()
          .equals(other.getObjectName())) return false;
      if (getEventLength()
          != other.getEventLength()) return false;
      if (!getTransactionId()
          .equals(other.getTransactionId())) return false;
      if (!getRelativeName()
          .equals(other.getRelativeName())) return false;
      if (!getLastChangeNumber()
          .equals(other.getLastChangeNumber())) return false;
      if (getTableId()
          != other.getTableId()) return false;
      if (!getDdlSchemaName()
          .equals(other.getDdlSchemaName())) return false;
      if (hasSlicePoint() != other.hasSlicePoint()) return false;
      if (hasSlicePoint()) {
        if (!getSlicePoint()
            .equals(other.getSlicePoint())) return false;
      }
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!getVersionPresentCase().equals(other.getVersionPresentCase())) return false;
      switch (versionPresentCase_) {
        case 1:
          if (getVersion()
              != other.getVersion()) return false;
          break;
        case 0:
        default:
      }
      if (!getSourceTypePresentCase().equals(other.getSourceTypePresentCase())) return false;
      switch (sourceTypePresentCase_) {
        case 7:
          if (getSourceTypeValue()
              != other.getSourceTypeValue()) return false;
          break;
        case 0:
        default:
      }
      if (!getEventTypePresentCase().equals(other.getEventTypePresentCase())) return false;
      switch (eventTypePresentCase_) {
        case 12:
          if (getEventTypeValue()
              != other.getEventTypeValue()) return false;
          break;
        case 0:
        default:
      }
      if (!getIsDdlPresentCase().equals(other.getIsDdlPresentCase())) return false;
      switch (isDdlPresentCase_) {
        case 17:
          if (getIsDdl()
              != other.getIsDdl()) return false;
          break;
        case 0:
        default:
      }
      if (!getObjectTypePresentCase().equals(other.getObjectTypePresentCase())) return false;
      switch (objectTypePresentCase_) {
        case 19:
          if (getObjectTypeValue()
              != other.getObjectTypeValue()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOGFILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getLogfileName().hashCode();
      hash = (37 * hash) + LOGFILEOFFSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLogfileOffset());
      hash = (37 * hash) + SERVERID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getServerId());
      hash = (37 * hash) + SERVERENCODE_FIELD_NUMBER;
      hash = (53 * hash) + getServerenCode().hashCode();
      hash = (37 * hash) + EXECUTETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExecuteTime());
      hash = (37 * hash) + CATALOG_FIELD_NUMBER;
      hash = (53 * hash) + getCatalog().hashCode();
      hash = (37 * hash) + SCHEMANAME_FIELD_NUMBER;
      hash = (53 * hash) + getSchemaName().hashCode();
      hash = (37 * hash) + OBJECTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getObjectName().hashCode();
      hash = (37 * hash) + EVENTLENGTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEventLength());
      hash = (37 * hash) + TRANSACTIONID_FIELD_NUMBER;
      hash = (53 * hash) + getTransactionId().hashCode();
      hash = (37 * hash) + RELATIVENAME_FIELD_NUMBER;
      hash = (53 * hash) + getRelativeName().hashCode();
      hash = (37 * hash) + LASTCHANGENUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getLastChangeNumber().hashCode();
      hash = (37 * hash) + TABLEID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTableId());
      hash = (37 * hash) + DDLSCHEMANAME_FIELD_NUMBER;
      hash = (53 * hash) + getDdlSchemaName().hashCode();
      if (hasSlicePoint()) {
        hash = (37 * hash) + SLICEPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getSlicePoint().hashCode();
      }
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      switch (versionPresentCase_) {
        case 1:
          hash = (37 * hash) + VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getVersion();
          break;
        case 0:
        default:
      }
      switch (sourceTypePresentCase_) {
        case 7:
          hash = (37 * hash) + SOURCETYPE_FIELD_NUMBER;
          hash = (53 * hash) + getSourceTypeValue();
          break;
        case 0:
        default:
      }
      switch (eventTypePresentCase_) {
        case 12:
          hash = (37 * hash) + EVENTTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getEventTypeValue();
          break;
        case 0:
        default:
      }
      switch (isDdlPresentCase_) {
        case 17:
          hash = (37 * hash) + ISDDL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsDdl());
          break;
        case 0:
        default:
      }
      switch (objectTypePresentCase_) {
        case 19:
          hash = (37 * hash) + OBJECTTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getObjectTypeValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **message Header*
     * </pre>
     *
     * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mchz.kafkadataformatinput.formatmodel.Header)
        HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Header.class, Builder.class);
      }

      // Construct using com.mchz.kafkadataformatinput.formatmodel.DSyncEntry.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        logfileName_ = "";

        logfileOffset_ = 0L;

        serverId_ = 0L;

        serverenCode_ = "";

        executeTime_ = 0L;

        catalog_ = "";

        schemaName_ = "";

        objectName_ = "";

        eventLength_ = 0L;

        transactionId_ = "";

        relativeName_ = "";

        lastChangeNumber_ = "";

        tableId_ = 0L;

        ddlSchemaName_ = "";

        if (slicePointBuilder_ == null) {
          slicePoint_ = null;
        } else {
          slicePoint_ = null;
          slicePointBuilder_ = null;
        }
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          propsBuilder_.clear();
        }
        versionPresentCase_ = 0;
        versionPresent_ = null;
        sourceTypePresentCase_ = 0;
        sourceTypePresent_ = null;
        eventTypePresentCase_ = 0;
        eventTypePresent_ = null;
        isDdlPresentCase_ = 0;
        isDdlPresent_ = null;
        objectTypePresentCase_ = 0;
        objectTypePresent_ = null;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_descriptor;
      }

      @Override
      public Header getDefaultInstanceForType() {
        return Header.getDefaultInstance();
      }

      @Override
      public Header build() {
        Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Header buildPartial() {
        Header result = new Header(this);
        int from_bitField0_ = bitField0_;
        if (versionPresentCase_ == 1) {
          result.versionPresent_ = versionPresent_;
        }
        result.logfileName_ = logfileName_;
        result.logfileOffset_ = logfileOffset_;
        result.serverId_ = serverId_;
        result.serverenCode_ = serverenCode_;
        result.executeTime_ = executeTime_;
        if (sourceTypePresentCase_ == 7) {
          result.sourceTypePresent_ = sourceTypePresent_;
        }
        result.catalog_ = catalog_;
        result.schemaName_ = schemaName_;
        result.objectName_ = objectName_;
        result.eventLength_ = eventLength_;
        if (eventTypePresentCase_ == 12) {
          result.eventTypePresent_ = eventTypePresent_;
        }
        result.transactionId_ = transactionId_;
        result.relativeName_ = relativeName_;
        result.lastChangeNumber_ = lastChangeNumber_;
        result.tableId_ = tableId_;
        if (isDdlPresentCase_ == 17) {
          result.isDdlPresent_ = isDdlPresent_;
        }
        result.ddlSchemaName_ = ddlSchemaName_;
        if (objectTypePresentCase_ == 19) {
          result.objectTypePresent_ = objectTypePresent_;
        }
        if (slicePointBuilder_ == null) {
          result.slicePoint_ = slicePoint_;
        } else {
          result.slicePoint_ = slicePointBuilder_.build();
        }
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        result.versionPresentCase_ = versionPresentCase_;
        result.sourceTypePresentCase_ = sourceTypePresentCase_;
        result.eventTypePresentCase_ = eventTypePresentCase_;
        result.isDdlPresentCase_ = isDdlPresentCase_;
        result.objectTypePresentCase_ = objectTypePresentCase_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Header) {
          return mergeFrom((Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Header other) {
        if (other == Header.getDefaultInstance()) return this;
        if (!other.getLogfileName().isEmpty()) {
          logfileName_ = other.logfileName_;
          onChanged();
        }
        if (other.getLogfileOffset() != 0L) {
          setLogfileOffset(other.getLogfileOffset());
        }
        if (other.getServerId() != 0L) {
          setServerId(other.getServerId());
        }
        if (!other.getServerenCode().isEmpty()) {
          serverenCode_ = other.serverenCode_;
          onChanged();
        }
        if (other.getExecuteTime() != 0L) {
          setExecuteTime(other.getExecuteTime());
        }
        if (!other.getCatalog().isEmpty()) {
          catalog_ = other.catalog_;
          onChanged();
        }
        if (!other.getSchemaName().isEmpty()) {
          schemaName_ = other.schemaName_;
          onChanged();
        }
        if (!other.getObjectName().isEmpty()) {
          objectName_ = other.objectName_;
          onChanged();
        }
        if (other.getEventLength() != 0L) {
          setEventLength(other.getEventLength());
        }
        if (!other.getTransactionId().isEmpty()) {
          transactionId_ = other.transactionId_;
          onChanged();
        }
        if (!other.getRelativeName().isEmpty()) {
          relativeName_ = other.relativeName_;
          onChanged();
        }
        if (!other.getLastChangeNumber().isEmpty()) {
          lastChangeNumber_ = other.lastChangeNumber_;
          onChanged();
        }
        if (other.getTableId() != 0L) {
          setTableId(other.getTableId());
        }
        if (!other.getDdlSchemaName().isEmpty()) {
          ddlSchemaName_ = other.ddlSchemaName_;
          onChanged();
        }
        if (other.hasSlicePoint()) {
          mergeSlicePoint(other.getSlicePoint());
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
              propsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        switch (other.getVersionPresentCase()) {
          case VERSION: {
            setVersion(other.getVersion());
            break;
          }
          case VERSIONPRESENT_NOT_SET: {
            break;
          }
        }
        switch (other.getSourceTypePresentCase()) {
          case SOURCETYPE: {
            setSourceTypeValue(other.getSourceTypeValue());
            break;
          }
          case SOURCETYPEPRESENT_NOT_SET: {
            break;
          }
        }
        switch (other.getEventTypePresentCase()) {
          case EVENTTYPE: {
            setEventTypeValue(other.getEventTypeValue());
            break;
          }
          case EVENTTYPEPRESENT_NOT_SET: {
            break;
          }
        }
        switch (other.getIsDdlPresentCase()) {
          case ISDDL: {
            setIsDdl(other.getIsDdl());
            break;
          }
          case ISDDLPRESENT_NOT_SET: {
            break;
          }
        }
        switch (other.getObjectTypePresentCase()) {
          case OBJECTTYPE: {
            setObjectTypeValue(other.getObjectTypeValue());
            break;
          }
          case OBJECTTYPEPRESENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int versionPresentCase_ = 0;
      private Object versionPresent_;
      public VersionPresentCase
          getVersionPresentCase() {
        return VersionPresentCase.forNumber(
            versionPresentCase_);
      }

      public Builder clearVersionPresent() {
        versionPresentCase_ = 0;
        versionPresent_ = null;
        onChanged();
        return this;
      }

      private int sourceTypePresentCase_ = 0;
      private Object sourceTypePresent_;
      public SourceTypePresentCase
          getSourceTypePresentCase() {
        return SourceTypePresentCase.forNumber(
            sourceTypePresentCase_);
      }

      public Builder clearSourceTypePresent() {
        sourceTypePresentCase_ = 0;
        sourceTypePresent_ = null;
        onChanged();
        return this;
      }

      private int eventTypePresentCase_ = 0;
      private Object eventTypePresent_;
      public EventTypePresentCase
          getEventTypePresentCase() {
        return EventTypePresentCase.forNumber(
            eventTypePresentCase_);
      }

      public Builder clearEventTypePresent() {
        eventTypePresentCase_ = 0;
        eventTypePresent_ = null;
        onChanged();
        return this;
      }

      private int isDdlPresentCase_ = 0;
      private Object isDdlPresent_;
      public IsDdlPresentCase
          getIsDdlPresentCase() {
        return IsDdlPresentCase.forNumber(
            isDdlPresentCase_);
      }

      public Builder clearIsDdlPresent() {
        isDdlPresentCase_ = 0;
        isDdlPresent_ = null;
        onChanged();
        return this;
      }

      private int objectTypePresentCase_ = 0;
      private Object objectTypePresent_;
      public ObjectTypePresentCase
          getObjectTypePresentCase() {
        return ObjectTypePresentCase.forNumber(
            objectTypePresentCase_);
      }

      public Builder clearObjectTypePresent() {
        objectTypePresentCase_ = 0;
        objectTypePresent_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>int32 version = 1;</code>
       * @return The version.
       */
      public int getVersion() {
        if (versionPresentCase_ == 1) {
          return (Integer) versionPresent_;
        }
        return 0;
      }
      /**
       * <code>int32 version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        versionPresentCase_ = 1;
        versionPresent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        if (versionPresentCase_ == 1) {
          versionPresentCase_ = 0;
          versionPresent_ = null;
          onChanged();
        }
        return this;
      }

      private Object logfileName_ = "";
      /**
       * <pre>
       **binlog/redolog 文件名*
       * </pre>
       *
       * <code>string logfileName = 2;</code>
       * @return The logfileName.
       */
      public String getLogfileName() {
        Object ref = logfileName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          logfileName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       **binlog/redolog 文件名*
       * </pre>
       *
       * <code>string logfileName = 2;</code>
       * @return The bytes for logfileName.
       */
      public com.google.protobuf.ByteString
          getLogfileNameBytes() {
        Object ref = logfileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          logfileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       **binlog/redolog 文件名*
       * </pre>
       *
       * <code>string logfileName = 2;</code>
       * @param value The logfileName to set.
       * @return This builder for chaining.
       */
      public Builder setLogfileName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        logfileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **binlog/redolog 文件名*
       * </pre>
       *
       * <code>string logfileName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogfileName() {

        logfileName_ = getDefaultInstance().getLogfileName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       **binlog/redolog 文件名*
       * </pre>
       *
       * <code>string logfileName = 2;</code>
       * @param value The bytes for logfileName to set.
       * @return This builder for chaining.
       */
      public Builder setLogfileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        logfileName_ = value;
        onChanged();
        return this;
      }

      private long logfileOffset_ ;
      /**
       * <pre>
       **binlog/redolog 文件的偏移位置*
       * </pre>
       *
       * <code>int64 logfileOffset = 3;</code>
       * @return The logfileOffset.
       */
      public long getLogfileOffset() {
        return logfileOffset_;
      }
      /**
       * <pre>
       **binlog/redolog 文件的偏移位置*
       * </pre>
       *
       * <code>int64 logfileOffset = 3;</code>
       * @param value The logfileOffset to set.
       * @return This builder for chaining.
       */
      public Builder setLogfileOffset(long value) {

        logfileOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **binlog/redolog 文件的偏移位置*
       * </pre>
       *
       * <code>int64 logfileOffset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogfileOffset() {

        logfileOffset_ = 0L;
        onChanged();
        return this;
      }

      private long serverId_ ;
      /**
       * <pre>
       **服务端serverId*
       * </pre>
       *
       * <code>int64 serverId = 4;</code>
       * @return The serverId.
       */
      public long getServerId() {
        return serverId_;
      }
      /**
       * <pre>
       **服务端serverId*
       * </pre>
       *
       * <code>int64 serverId = 4;</code>
       * @param value The serverId to set.
       * @return This builder for chaining.
       */
      public Builder setServerId(long value) {

        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **服务端serverId*
       * </pre>
       *
       * <code>int64 serverId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearServerId() {

        serverId_ = 0L;
        onChanged();
        return this;
      }

      private Object serverenCode_ = "";
      /**
       * <pre>
       ** 变更数据的编码 *
       * </pre>
       *
       * <code>string serverenCode = 5;</code>
       * @return The serverenCode.
       */
      public String getServerenCode() {
        Object ref = serverenCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serverenCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 变更数据的编码 *
       * </pre>
       *
       * <code>string serverenCode = 5;</code>
       * @return The bytes for serverenCode.
       */
      public com.google.protobuf.ByteString
          getServerenCodeBytes() {
        Object ref = serverenCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serverenCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 变更数据的编码 *
       * </pre>
       *
       * <code>string serverenCode = 5;</code>
       * @param value The serverenCode to set.
       * @return This builder for chaining.
       */
      public Builder setServerenCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        serverenCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 变更数据的编码 *
       * </pre>
       *
       * <code>string serverenCode = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearServerenCode() {

        serverenCode_ = getDefaultInstance().getServerenCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 变更数据的编码 *
       * </pre>
       *
       * <code>string serverenCode = 5;</code>
       * @param value The bytes for serverenCode to set.
       * @return This builder for chaining.
       */
      public Builder setServerenCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        serverenCode_ = value;
        onChanged();
        return this;
      }

      private long executeTime_ ;
      /**
       * <pre>
       **变更数据的执行时间 *
       * </pre>
       *
       * <code>int64 executeTime = 6;</code>
       * @return The executeTime.
       */
      public long getExecuteTime() {
        return executeTime_;
      }
      /**
       * <pre>
       **变更数据的执行时间 *
       * </pre>
       *
       * <code>int64 executeTime = 6;</code>
       * @param value The executeTime to set.
       * @return This builder for chaining.
       */
      public Builder setExecuteTime(long value) {

        executeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **变更数据的执行时间 *
       * </pre>
       *
       * <code>int64 executeTime = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearExecuteTime() {

        executeTime_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Type sourceType = 7;</code>
       * @return The enum numeric value on the wire for sourceType.
       */
      public int getSourceTypeValue() {
        if (sourceTypePresentCase_ == 7) {
          return ((Integer) sourceTypePresent_).intValue();
        }
        return 0;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Type sourceType = 7;</code>
       * @param value The enum numeric value on the wire for sourceType to set.
       * @return This builder for chaining.
       */
      public Builder setSourceTypeValue(int value) {
        sourceTypePresentCase_ = 7;
        sourceTypePresent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Type sourceType = 7;</code>
       * @return The sourceType.
       */
      public Type getSourceType() {
        if (sourceTypePresentCase_ == 7) {
          @SuppressWarnings("deprecation")
          Type result = Type.valueOf(
              (Integer) sourceTypePresent_);
          return result == null ? Type.UNRECOGNIZED : result;
        }
        return Type.TYPECOMPATIBLEPROTO2;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Type sourceType = 7;</code>
       * @param value The sourceType to set.
       * @return This builder for chaining.
       */
      public Builder setSourceType(Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        sourceTypePresentCase_ = 7;
        sourceTypePresent_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.Type sourceType = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceType() {
        if (sourceTypePresentCase_ == 7) {
          sourceTypePresentCase_ = 0;
          sourceTypePresent_ = null;
          onChanged();
        }
        return this;
      }

      private Object catalog_ = "";
      /**
       * <code>string catalog = 8;</code>
       * @return The catalog.
       */
      public String getCatalog() {
        Object ref = catalog_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          catalog_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string catalog = 8;</code>
       * @return The bytes for catalog.
       */
      public com.google.protobuf.ByteString
          getCatalogBytes() {
        Object ref = catalog_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          catalog_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string catalog = 8;</code>
       * @param value The catalog to set.
       * @return This builder for chaining.
       */
      public Builder setCatalog(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        catalog_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string catalog = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCatalog() {

        catalog_ = getDefaultInstance().getCatalog();
        onChanged();
        return this;
      }
      /**
       * <code>string catalog = 8;</code>
       * @param value The bytes for catalog to set.
       * @return This builder for chaining.
       */
      public Builder setCatalogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        catalog_ = value;
        onChanged();
        return this;
      }

      private Object schemaName_ = "";
      /**
       * <pre>
       ** 变更数据的schemaname*
       * </pre>
       *
       * <code>string schemaName = 9;</code>
       * @return The schemaName.
       */
      public String getSchemaName() {
        Object ref = schemaName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          schemaName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 变更数据的schemaname*
       * </pre>
       *
       * <code>string schemaName = 9;</code>
       * @return The bytes for schemaName.
       */
      public com.google.protobuf.ByteString
          getSchemaNameBytes() {
        Object ref = schemaName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          schemaName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 变更数据的schemaname*
       * </pre>
       *
       * <code>string schemaName = 9;</code>
       * @param value The schemaName to set.
       * @return This builder for chaining.
       */
      public Builder setSchemaName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        schemaName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 变更数据的schemaname*
       * </pre>
       *
       * <code>string schemaName = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSchemaName() {

        schemaName_ = getDefaultInstance().getSchemaName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 变更数据的schemaname*
       * </pre>
       *
       * <code>string schemaName = 9;</code>
       * @param value The bytes for schemaName to set.
       * @return This builder for chaining.
       */
      public Builder setSchemaNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        schemaName_ = value;
        onChanged();
        return this;
      }

      private Object objectName_ = "";
      /**
       * <pre>
       **变更数据的object name*
       * </pre>
       *
       * <code>string objectName = 10;</code>
       * @return The objectName.
       */
      public String getObjectName() {
        Object ref = objectName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          objectName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       **变更数据的object name*
       * </pre>
       *
       * <code>string objectName = 10;</code>
       * @return The bytes for objectName.
       */
      public com.google.protobuf.ByteString
          getObjectNameBytes() {
        Object ref = objectName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          objectName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       **变更数据的object name*
       * </pre>
       *
       * <code>string objectName = 10;</code>
       * @param value The objectName to set.
       * @return This builder for chaining.
       */
      public Builder setObjectName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        objectName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **变更数据的object name*
       * </pre>
       *
       * <code>string objectName = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearObjectName() {

        objectName_ = getDefaultInstance().getObjectName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       **变更数据的object name*
       * </pre>
       *
       * <code>string objectName = 10;</code>
       * @param value The bytes for objectName to set.
       * @return This builder for chaining.
       */
      public Builder setObjectNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        objectName_ = value;
        onChanged();
        return this;
      }

      private long eventLength_ ;
      /**
       * <pre>
       **每个event的长度*
       * </pre>
       *
       * <code>int64 eventLength = 11;</code>
       * @return The eventLength.
       */
      public long getEventLength() {
        return eventLength_;
      }
      /**
       * <pre>
       **每个event的长度*
       * </pre>
       *
       * <code>int64 eventLength = 11;</code>
       * @param value The eventLength to set.
       * @return This builder for chaining.
       */
      public Builder setEventLength(long value) {

        eventLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **每个event的长度*
       * </pre>
       *
       * <code>int64 eventLength = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventLength() {

        eventLength_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EventType eventType = 12;</code>
       * @return The enum numeric value on the wire for eventType.
       */
      public int getEventTypeValue() {
        if (eventTypePresentCase_ == 12) {
          return ((Integer) eventTypePresent_).intValue();
        }
        return 0;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EventType eventType = 12;</code>
       * @param value The enum numeric value on the wire for eventType to set.
       * @return This builder for chaining.
       */
      public Builder setEventTypeValue(int value) {
        eventTypePresentCase_ = 12;
        eventTypePresent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EventType eventType = 12;</code>
       * @return The eventType.
       */
      public EventType getEventType() {
        if (eventTypePresentCase_ == 12) {
          @SuppressWarnings("deprecation")
          EventType result = EventType.valueOf(
              (Integer) eventTypePresent_);
          return result == null ? EventType.UNRECOGNIZED : result;
        }
        return EventType.EVENTTYPECOMPATIBLEPROTO2;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EventType eventType = 12;</code>
       * @param value The eventType to set.
       * @return This builder for chaining.
       */
      public Builder setEventType(EventType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        eventTypePresentCase_ = 12;
        eventTypePresent_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.EventType eventType = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventType() {
        if (eventTypePresentCase_ == 12) {
          eventTypePresentCase_ = 0;
          eventTypePresent_ = null;
          onChanged();
        }
        return this;
      }

      private Object transactionId_ = "";
      /**
       * <pre>
       **mysql当前事务的gtid*
       * </pre>
       *
       * <code>string transactionId = 13;</code>
       * @return The transactionId.
       */
      public String getTransactionId() {
        Object ref = transactionId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          transactionId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       **mysql当前事务的gtid*
       * </pre>
       *
       * <code>string transactionId = 13;</code>
       * @return The bytes for transactionId.
       */
      public com.google.protobuf.ByteString
          getTransactionIdBytes() {
        Object ref = transactionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          transactionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       **mysql当前事务的gtid*
       * </pre>
       *
       * <code>string transactionId = 13;</code>
       * @param value The transactionId to set.
       * @return This builder for chaining.
       */
      public Builder setTransactionId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        transactionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **mysql当前事务的gtid*
       * </pre>
       *
       * <code>string transactionId = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransactionId() {

        transactionId_ = getDefaultInstance().getTransactionId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       **mysql当前事务的gtid*
       * </pre>
       *
       * <code>string transactionId = 13;</code>
       * @param value The bytes for transactionId to set.
       * @return This builder for chaining.
       */
      public Builder setTransactionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        transactionId_ = value;
        onChanged();
        return this;
      }

      private Object relativeName_ = "";
      /**
       * <code>string relativeName = 14;</code>
       * @return The relativeName.
       */
      public String getRelativeName() {
        Object ref = relativeName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          relativeName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string relativeName = 14;</code>
       * @return The bytes for relativeName.
       */
      public com.google.protobuf.ByteString
          getRelativeNameBytes() {
        Object ref = relativeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          relativeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string relativeName = 14;</code>
       * @param value The relativeName to set.
       * @return This builder for chaining.
       */
      public Builder setRelativeName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        relativeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string relativeName = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearRelativeName() {

        relativeName_ = getDefaultInstance().getRelativeName();
        onChanged();
        return this;
      }
      /**
       * <code>string relativeName = 14;</code>
       * @param value The bytes for relativeName to set.
       * @return This builder for chaining.
       */
      public Builder setRelativeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        relativeName_ = value;
        onChanged();
        return this;
      }

      private Object lastChangeNumber_ = "";
      /**
       * <pre>
       ** mysql为当前数据库binglog文件偏移;oracle为当前数据库SCN; sqlserver为查询当前数据库LSN *
       * </pre>
       *
       * <code>string lastChangeNumber = 15;</code>
       * @return The lastChangeNumber.
       */
      public String getLastChangeNumber() {
        Object ref = lastChangeNumber_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          lastChangeNumber_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** mysql为当前数据库binglog文件偏移;oracle为当前数据库SCN; sqlserver为查询当前数据库LSN *
       * </pre>
       *
       * <code>string lastChangeNumber = 15;</code>
       * @return The bytes for lastChangeNumber.
       */
      public com.google.protobuf.ByteString
          getLastChangeNumberBytes() {
        Object ref = lastChangeNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          lastChangeNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** mysql为当前数据库binglog文件偏移;oracle为当前数据库SCN; sqlserver为查询当前数据库LSN *
       * </pre>
       *
       * <code>string lastChangeNumber = 15;</code>
       * @param value The lastChangeNumber to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeNumber(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        lastChangeNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** mysql为当前数据库binglog文件偏移;oracle为当前数据库SCN; sqlserver为查询当前数据库LSN *
       * </pre>
       *
       * <code>string lastChangeNumber = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChangeNumber() {

        lastChangeNumber_ = getDefaultInstance().getLastChangeNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** mysql为当前数据库binglog文件偏移;oracle为当前数据库SCN; sqlserver为查询当前数据库LSN *
       * </pre>
       *
       * <code>string lastChangeNumber = 15;</code>
       * @param value The bytes for lastChangeNumber to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        lastChangeNumber_ = value;
        onChanged();
        return this;
      }

      private long tableId_ ;
      /**
       * <pre>
       **tableId,由数据库产生*
       * </pre>
       *
       * <code>int64 tableId = 16;</code>
       * @return The tableId.
       */
      public long getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       **tableId,由数据库产生*
       * </pre>
       *
       * <code>int64 tableId = 16;</code>
       * @param value The tableId to set.
       * @return This builder for chaining.
       */
      public Builder setTableId(long value) {

        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **tableId,由数据库产生*
       * </pre>
       *
       * <code>int64 tableId = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearTableId() {

        tableId_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>bool isDdl = 17;</code>
       * @return The isDdl.
       */
      public boolean getIsDdl() {
        if (isDdlPresentCase_ == 17) {
          return (Boolean) isDdlPresent_;
        }
        return false;
      }
      /**
       * <code>bool isDdl = 17;</code>
       * @param value The isDdl to set.
       * @return This builder for chaining.
       */
      public Builder setIsDdl(boolean value) {
        isDdlPresentCase_ = 17;
        isDdlPresent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool isDdl = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsDdl() {
        if (isDdlPresentCase_ == 17) {
          isDdlPresentCase_ = 0;
          isDdlPresent_ = null;
          onChanged();
        }
        return this;
      }

      private Object ddlSchemaName_ = "";
      /**
       * <pre>
       ** ddl/query的schemaName，会存在跨库ddl，需要保留执行ddl的当前schemaName  *
       * </pre>
       *
       * <code>string ddlSchemaName = 18;</code>
       * @return The ddlSchemaName.
       */
      public String getDdlSchemaName() {
        Object ref = ddlSchemaName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          ddlSchemaName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** ddl/query的schemaName，会存在跨库ddl，需要保留执行ddl的当前schemaName  *
       * </pre>
       *
       * <code>string ddlSchemaName = 18;</code>
       * @return The bytes for ddlSchemaName.
       */
      public com.google.protobuf.ByteString
          getDdlSchemaNameBytes() {
        Object ref = ddlSchemaName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ddlSchemaName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** ddl/query的schemaName，会存在跨库ddl，需要保留执行ddl的当前schemaName  *
       * </pre>
       *
       * <code>string ddlSchemaName = 18;</code>
       * @param value The ddlSchemaName to set.
       * @return This builder for chaining.
       */
      public Builder setDdlSchemaName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        ddlSchemaName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** ddl/query的schemaName，会存在跨库ddl，需要保留执行ddl的当前schemaName  *
       * </pre>
       *
       * <code>string ddlSchemaName = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearDdlSchemaName() {

        ddlSchemaName_ = getDefaultInstance().getDdlSchemaName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** ddl/query的schemaName，会存在跨库ddl，需要保留执行ddl的当前schemaName  *
       * </pre>
       *
       * <code>string ddlSchemaName = 18;</code>
       * @param value The bytes for ddlSchemaName to set.
       * @return This builder for chaining.
       */
      public Builder setDdlSchemaNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        ddlSchemaName_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.ObjectType objectType = 19;</code>
       * @return The enum numeric value on the wire for objectType.
       */
      public int getObjectTypeValue() {
        if (objectTypePresentCase_ == 19) {
          return ((Integer) objectTypePresent_).intValue();
        }
        return 0;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.ObjectType objectType = 19;</code>
       * @param value The enum numeric value on the wire for objectType to set.
       * @return This builder for chaining.
       */
      public Builder setObjectTypeValue(int value) {
        objectTypePresentCase_ = 19;
        objectTypePresent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.ObjectType objectType = 19;</code>
       * @return The objectType.
       */
      public ObjectType getObjectType() {
        if (objectTypePresentCase_ == 19) {
          @SuppressWarnings("deprecation")
          ObjectType result = ObjectType.valueOf(
              (Integer) objectTypePresent_);
          return result == null ? ObjectType.UNRECOGNIZED : result;
        }
        return ObjectType.OBJECTTYPECOMPATIBLEPROTO2;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.ObjectType objectType = 19;</code>
       * @param value The objectType to set.
       * @return This builder for chaining.
       */
      public Builder setObjectType(ObjectType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        objectTypePresentCase_ = 19;
        objectTypePresent_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.ObjectType objectType = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearObjectType() {
        if (objectTypePresentCase_ == 19) {
          objectTypePresentCase_ = 0;
          objectTypePresent_ = null;
          onChanged();
        }
        return this;
      }

      private SlicePoint slicePoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SlicePoint, SlicePoint.Builder, SlicePointOrBuilder> slicePointBuilder_;
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
       * @return Whether the slicePoint field is set.
       */
      public boolean hasSlicePoint() {
        return slicePointBuilder_ != null || slicePoint_ != null;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
       * @return The slicePoint.
       */
      public SlicePoint getSlicePoint() {
        if (slicePointBuilder_ == null) {
          return slicePoint_ == null ? SlicePoint.getDefaultInstance() : slicePoint_;
        } else {
          return slicePointBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
       */
      public Builder setSlicePoint(SlicePoint value) {
        if (slicePointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          slicePoint_ = value;
          onChanged();
        } else {
          slicePointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
       */
      public Builder setSlicePoint(
          SlicePoint.Builder builderForValue) {
        if (slicePointBuilder_ == null) {
          slicePoint_ = builderForValue.build();
          onChanged();
        } else {
          slicePointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
       */
      public Builder mergeSlicePoint(SlicePoint value) {
        if (slicePointBuilder_ == null) {
          if (slicePoint_ != null) {
            slicePoint_ =
              SlicePoint.newBuilder(slicePoint_).mergeFrom(value).buildPartial();
          } else {
            slicePoint_ = value;
          }
          onChanged();
        } else {
          slicePointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
       */
      public Builder clearSlicePoint() {
        if (slicePointBuilder_ == null) {
          slicePoint_ = null;
          onChanged();
        } else {
          slicePoint_ = null;
          slicePointBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
       */
      public SlicePoint.Builder getSlicePointBuilder() {

        onChanged();
        return getSlicePointFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
       */
      public SlicePointOrBuilder getSlicePointOrBuilder() {
        if (slicePointBuilder_ != null) {
          return slicePointBuilder_.getMessageOrBuilder();
        } else {
          return slicePoint_ == null ?
              SlicePoint.getDefaultInstance() : slicePoint_;
        }
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SlicePoint, SlicePoint.Builder, SlicePointOrBuilder>
          getSlicePointFieldBuilder() {
        if (slicePointBuilder_ == null) {
          slicePointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SlicePoint, SlicePoint.Builder, SlicePointOrBuilder>(
                  getSlicePoint(),
                  getParentForChildren(),
                  isClean());
          slicePoint_ = null;
        }
        return slicePointBuilder_;
      }

      private java.util.List<Pair> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          props_ = new java.util.ArrayList<Pair>(props_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder> propsBuilder_;

      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public java.util.List<Pair> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Pair getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Builder setProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Builder setProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Builder addProps(Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Builder addProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Builder addProps(
          Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Builder addProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Builder addAllProps(
          Iterable<? extends Pair> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Pair.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public PairOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public java.util.List<? extends PairOrBuilder>
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Pair.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public Pair.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 21;</code>
       */
      public java.util.List<Pair.Builder>
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder>
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Pair, Pair.Builder, PairOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.mchz.kafkadataformatinput.formatmodel.Header)
    }

    // @@protoc_insertion_point(class_scope:com.mchz.kafkadataformatinput.formatmodel.Header)
    private static final Header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Header();
    }

    public static Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Header>
        PARSER = new com.google.protobuf.AbstractParser<Header>() {
      @Override
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Header> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    @Override
    public Header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ColumnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mchz.kafkadataformatinput.formatmodel.Column)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     **字段下标*
     * </pre>
     *
     * <code>int32 index = 1;</code>
     * @return The index.
     */
    int getIndex();

    /**
     * <pre>
     **字段java中类型*
     * </pre>
     *
     * <code>int32 sqlType = 2;</code>
     * @return The sqlType.
     */
    int getSqlType();

    /**
     * <pre>
     **字段名称(忽略大小写)，在mysql中是没有的*
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    String getName();
    /**
     * <pre>
     **字段名称(忽略大小写)，在mysql中是没有的*
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     **是否是主键*
     * </pre>
     *
     * <code>bool isKey = 4;</code>
     * @return The isKey.
     */
    boolean getIsKey();

    /**
     * <pre>
     **如果EventType=UPDATE,用于标识这个字段值是否有修改*
     * </pre>
     *
     * <code>bool updated = 5;</code>
     * @return The updated.
     */
    boolean getUpdated();

    /**
     * <code>bool isNull = 6;</code>
     * @return The isNull.
     */
    boolean getIsNull();

    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    java.util.List<Pair>
        getPropsList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    Pair getProps(int index);
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    PairOrBuilder getPropsOrBuilder(
        int index);

    /**
     * <pre>
     ** 字段值,timestamp,Datetime是一个时间格式的文本 *
     * </pre>
     *
     * <code>string value = 8;</code>
     * @return The value.
     */
    String getValue();
    /**
     * <pre>
     ** 字段值,timestamp,Datetime是一个时间格式的文本 *
     * </pre>
     *
     * <code>string value = 8;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <pre>
     ** 对应数据对象原始长度 *
     * </pre>
     *
     * <code>int32 length = 9;</code>
     * @return The length.
     */
    int getLength();

    /**
     * <pre>
     **字段数据库内部类型*
     * </pre>
     *
     * <code>string dbInternalType = 10;</code>
     * @return The dbInternalType.
     */
    String getDbInternalType();
    /**
     * <pre>
     **字段数据库内部类型*
     * </pre>
     *
     * <code>string dbInternalType = 10;</code>
     * @return The bytes for dbInternalType.
     */
    com.google.protobuf.ByteString
        getDbInternalTypeBytes();

    /**
     * <code>bool isSlice = 11;</code>
     * @return The isSlice.
     */
    boolean getIsSlice();

    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
     * @return Whether the slicePoint field is set.
     */
    boolean hasSlicePoint();
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
     * @return The slicePoint.
     */
    SlicePoint getSlicePoint();
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
     */
    SlicePointOrBuilder getSlicePointOrBuilder();

    public Column.IsNullPresentCase getIsNullPresentCase();
  }
  /**
   * <pre>
   **每个字段的数据结构*
   * </pre>
   *
   * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.Column}
   */
  public  static final class Column extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mchz.kafkadataformatinput.formatmodel.Column)
      ColumnOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Column.newBuilder() to construct.
    private Column(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Column() {
      name_ = "";
      props_ = java.util.Collections.emptyList();
      value_ = "";
      dbInternalType_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Column();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Column(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              index_ = input.readInt32();
              break;
            }
            case 16: {

              sqlType_ = input.readInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 32: {

              isKey_ = input.readBool();
              break;
            }
            case 40: {

              updated_ = input.readBool();
              break;
            }
            case 48: {
              isNullPresentCase_ = 6;
              isNullPresent_ = input.readBool();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                props_ = new java.util.ArrayList<Pair>();
                mutable_bitField0_ |= 0x00000001;
              }
              props_.add(
                  input.readMessage(Pair.parser(), extensionRegistry));
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            case 72: {

              length_ = input.readInt32();
              break;
            }
            case 82: {
              String s = input.readStringRequireUtf8();

              dbInternalType_ = s;
              break;
            }
            case 88: {

              isSlice_ = input.readBool();
              break;
            }
            case 98: {
              SlicePoint.Builder subBuilder = null;
              if (slicePoint_ != null) {
                subBuilder = slicePoint_.toBuilder();
              }
              slicePoint_ = input.readMessage(SlicePoint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(slicePoint_);
                slicePoint_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Column.class, Builder.class);
    }

    private int isNullPresentCase_ = 0;
    private Object isNullPresent_;
    public enum IsNullPresentCase
        implements com.google.protobuf.Internal.EnumLite,
            InternalOneOfEnum {
      ISNULL(6),
      ISNULLPRESENT_NOT_SET(0);
      private final int value;
      private IsNullPresentCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static IsNullPresentCase valueOf(int value) {
        return forNumber(value);
      }

      public static IsNullPresentCase forNumber(int value) {
        switch (value) {
          case 6: return ISNULL;
          case 0: return ISNULLPRESENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public IsNullPresentCase
    getIsNullPresentCase() {
      return IsNullPresentCase.forNumber(
          isNullPresentCase_);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <pre>
     **字段下标*
     * </pre>
     *
     * <code>int32 index = 1;</code>
     * @return The index.
     */
    public int getIndex() {
      return index_;
    }

    public static final int SQLTYPE_FIELD_NUMBER = 2;
    private int sqlType_;
    /**
     * <pre>
     **字段java中类型*
     * </pre>
     *
     * <code>int32 sqlType = 2;</code>
     * @return The sqlType.
     */
    public int getSqlType() {
      return sqlType_;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile Object name_;
    /**
     * <pre>
     **字段名称(忽略大小写)，在mysql中是没有的*
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     **字段名称(忽略大小写)，在mysql中是没有的*
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISKEY_FIELD_NUMBER = 4;
    private boolean isKey_;
    /**
     * <pre>
     **是否是主键*
     * </pre>
     *
     * <code>bool isKey = 4;</code>
     * @return The isKey.
     */
    public boolean getIsKey() {
      return isKey_;
    }

    public static final int UPDATED_FIELD_NUMBER = 5;
    private boolean updated_;
    /**
     * <pre>
     **如果EventType=UPDATE,用于标识这个字段值是否有修改*
     * </pre>
     *
     * <code>bool updated = 5;</code>
     * @return The updated.
     */
    public boolean getUpdated() {
      return updated_;
    }

    public static final int ISNULL_FIELD_NUMBER = 6;
    /**
     * <code>bool isNull = 6;</code>
     * @return The isNull.
     */
    public boolean getIsNull() {
      if (isNullPresentCase_ == 6) {
        return (Boolean) isNullPresent_;
      }
      return false;
    }

    public static final int PROPS_FIELD_NUMBER = 7;
    private java.util.List<Pair> props_;
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    public java.util.List<Pair> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    public java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    public Pair getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
     */
    public PairOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    public static final int VALUE_FIELD_NUMBER = 8;
    private volatile Object value_;
    /**
     * <pre>
     ** 字段值,timestamp,Datetime是一个时间格式的文本 *
     * </pre>
     *
     * <code>string value = 8;</code>
     * @return The value.
     */
    public String getValue() {
      Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** 字段值,timestamp,Datetime是一个时间格式的文本 *
     * </pre>
     *
     * <code>string value = 8;</code>
     * @return The bytes for value.
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LENGTH_FIELD_NUMBER = 9;
    private int length_;
    /**
     * <pre>
     ** 对应数据对象原始长度 *
     * </pre>
     *
     * <code>int32 length = 9;</code>
     * @return The length.
     */
    public int getLength() {
      return length_;
    }

    public static final int DBINTERNALTYPE_FIELD_NUMBER = 10;
    private volatile Object dbInternalType_;
    /**
     * <pre>
     **字段数据库内部类型*
     * </pre>
     *
     * <code>string dbInternalType = 10;</code>
     * @return The dbInternalType.
     */
    public String getDbInternalType() {
      Object ref = dbInternalType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dbInternalType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     **字段数据库内部类型*
     * </pre>
     *
     * <code>string dbInternalType = 10;</code>
     * @return The bytes for dbInternalType.
     */
    public com.google.protobuf.ByteString
        getDbInternalTypeBytes() {
      Object ref = dbInternalType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dbInternalType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISSLICE_FIELD_NUMBER = 11;
    private boolean isSlice_;
    /**
     * <code>bool isSlice = 11;</code>
     * @return The isSlice.
     */
    public boolean getIsSlice() {
      return isSlice_;
    }

    public static final int SLICEPOINT_FIELD_NUMBER = 12;
    private SlicePoint slicePoint_;
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
     * @return Whether the slicePoint field is set.
     */
    public boolean hasSlicePoint() {
      return slicePoint_ != null;
    }
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
     * @return The slicePoint.
     */
    public SlicePoint getSlicePoint() {
      return slicePoint_ == null ? SlicePoint.getDefaultInstance() : slicePoint_;
    }
    /**
     * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
     */
    public SlicePointOrBuilder getSlicePointOrBuilder() {
      return getSlicePoint();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0) {
        output.writeInt32(1, index_);
      }
      if (sqlType_ != 0) {
        output.writeInt32(2, sqlType_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (isKey_ != false) {
        output.writeBool(4, isKey_);
      }
      if (updated_ != false) {
        output.writeBool(5, updated_);
      }
      if (isNullPresentCase_ == 6) {
        output.writeBool(
            6, (boolean)((Boolean) isNullPresent_));
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(7, props_.get(i));
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, value_);
      }
      if (length_ != 0) {
        output.writeInt32(9, length_);
      }
      if (!getDbInternalTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, dbInternalType_);
      }
      if (isSlice_ != false) {
        output.writeBool(11, isSlice_);
      }
      if (slicePoint_ != null) {
        output.writeMessage(12, getSlicePoint());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (sqlType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sqlType_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (isKey_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isKey_);
      }
      if (updated_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, updated_);
      }
      if (isNullPresentCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              6, (boolean)((Boolean) isNullPresent_));
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, props_.get(i));
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, value_);
      }
      if (length_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, length_);
      }
      if (!getDbInternalTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, dbInternalType_);
      }
      if (isSlice_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isSlice_);
      }
      if (slicePoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getSlicePoint());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Column)) {
        return super.equals(obj);
      }
      Column other = (Column) obj;

      if (getIndex()
          != other.getIndex()) return false;
      if (getSqlType()
          != other.getSqlType()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (getIsKey()
          != other.getIsKey()) return false;
      if (getUpdated()
          != other.getUpdated()) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (getLength()
          != other.getLength()) return false;
      if (!getDbInternalType()
          .equals(other.getDbInternalType())) return false;
      if (getIsSlice()
          != other.getIsSlice()) return false;
      if (hasSlicePoint() != other.hasSlicePoint()) return false;
      if (hasSlicePoint()) {
        if (!getSlicePoint()
            .equals(other.getSlicePoint())) return false;
      }
      if (!getIsNullPresentCase().equals(other.getIsNullPresentCase())) return false;
      switch (isNullPresentCase_) {
        case 6:
          if (getIsNull()
              != other.getIsNull()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + SQLTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSqlType();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + ISKEY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsKey());
      hash = (37 * hash) + UPDATED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUpdated());
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength();
      hash = (37 * hash) + DBINTERNALTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDbInternalType().hashCode();
      hash = (37 * hash) + ISSLICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSlice());
      if (hasSlicePoint()) {
        hash = (37 * hash) + SLICEPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getSlicePoint().hashCode();
      }
      switch (isNullPresentCase_) {
        case 6:
          hash = (37 * hash) + ISNULL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsNull());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Column parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Column parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Column parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Column parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Column parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Column parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Column parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Column parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Column parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Column parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Column parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Column parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Column prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **每个字段的数据结构*
     * </pre>
     *
     * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.Column}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mchz.kafkadataformatinput.formatmodel.Column)
        ColumnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Column.class, Builder.class);
      }

      // Construct using com.mchz.kafkadataformatinput.formatmodel.DSyncEntry.Column.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        index_ = 0;

        sqlType_ = 0;

        name_ = "";

        isKey_ = false;

        updated_ = false;

        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          propsBuilder_.clear();
        }
        value_ = "";

        length_ = 0;

        dbInternalType_ = "";

        isSlice_ = false;

        if (slicePointBuilder_ == null) {
          slicePoint_ = null;
        } else {
          slicePoint_ = null;
          slicePointBuilder_ = null;
        }
        isNullPresentCase_ = 0;
        isNullPresent_ = null;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_descriptor;
      }

      @Override
      public Column getDefaultInstanceForType() {
        return Column.getDefaultInstance();
      }

      @Override
      public Column build() {
        Column result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Column buildPartial() {
        Column result = new Column(this);
        int from_bitField0_ = bitField0_;
        result.index_ = index_;
        result.sqlType_ = sqlType_;
        result.name_ = name_;
        result.isKey_ = isKey_;
        result.updated_ = updated_;
        if (isNullPresentCase_ == 6) {
          result.isNullPresent_ = isNullPresent_;
        }
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        result.value_ = value_;
        result.length_ = length_;
        result.dbInternalType_ = dbInternalType_;
        result.isSlice_ = isSlice_;
        if (slicePointBuilder_ == null) {
          result.slicePoint_ = slicePoint_;
        } else {
          result.slicePoint_ = slicePointBuilder_.build();
        }
        result.isNullPresentCase_ = isNullPresentCase_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Column) {
          return mergeFrom((Column)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Column other) {
        if (other == Column.getDefaultInstance()) return this;
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getSqlType() != 0) {
          setSqlType(other.getSqlType());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getIsKey() != false) {
          setIsKey(other.getIsKey());
        }
        if (other.getUpdated() != false) {
          setUpdated(other.getUpdated());
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
              propsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        if (other.getLength() != 0) {
          setLength(other.getLength());
        }
        if (!other.getDbInternalType().isEmpty()) {
          dbInternalType_ = other.dbInternalType_;
          onChanged();
        }
        if (other.getIsSlice() != false) {
          setIsSlice(other.getIsSlice());
        }
        if (other.hasSlicePoint()) {
          mergeSlicePoint(other.getSlicePoint());
        }
        switch (other.getIsNullPresentCase()) {
          case ISNULL: {
            setIsNull(other.getIsNull());
            break;
          }
          case ISNULLPRESENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Column parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Column) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int isNullPresentCase_ = 0;
      private Object isNullPresent_;
      public IsNullPresentCase
          getIsNullPresentCase() {
        return IsNullPresentCase.forNumber(
            isNullPresentCase_);
      }

      public Builder clearIsNullPresent() {
        isNullPresentCase_ = 0;
        isNullPresent_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private int index_ ;
      /**
       * <pre>
       **字段下标*
       * </pre>
       *
       * <code>int32 index = 1;</code>
       * @return The index.
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       **字段下标*
       * </pre>
       *
       * <code>int32 index = 1;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {

        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **字段下标*
       * </pre>
       *
       * <code>int32 index = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {

        index_ = 0;
        onChanged();
        return this;
      }

      private int sqlType_ ;
      /**
       * <pre>
       **字段java中类型*
       * </pre>
       *
       * <code>int32 sqlType = 2;</code>
       * @return The sqlType.
       */
      public int getSqlType() {
        return sqlType_;
      }
      /**
       * <pre>
       **字段java中类型*
       * </pre>
       *
       * <code>int32 sqlType = 2;</code>
       * @param value The sqlType to set.
       * @return This builder for chaining.
       */
      public Builder setSqlType(int value) {

        sqlType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **字段java中类型*
       * </pre>
       *
       * <code>int32 sqlType = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSqlType() {

        sqlType_ = 0;
        onChanged();
        return this;
      }

      private Object name_ = "";
      /**
       * <pre>
       **字段名称(忽略大小写)，在mysql中是没有的*
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       **字段名称(忽略大小写)，在mysql中是没有的*
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       **字段名称(忽略大小写)，在mysql中是没有的*
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **字段名称(忽略大小写)，在mysql中是没有的*
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {

        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       **字段名称(忽略大小写)，在mysql中是没有的*
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        name_ = value;
        onChanged();
        return this;
      }

      private boolean isKey_ ;
      /**
       * <pre>
       **是否是主键*
       * </pre>
       *
       * <code>bool isKey = 4;</code>
       * @return The isKey.
       */
      public boolean getIsKey() {
        return isKey_;
      }
      /**
       * <pre>
       **是否是主键*
       * </pre>
       *
       * <code>bool isKey = 4;</code>
       * @param value The isKey to set.
       * @return This builder for chaining.
       */
      public Builder setIsKey(boolean value) {

        isKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **是否是主键*
       * </pre>
       *
       * <code>bool isKey = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsKey() {

        isKey_ = false;
        onChanged();
        return this;
      }

      private boolean updated_ ;
      /**
       * <pre>
       **如果EventType=UPDATE,用于标识这个字段值是否有修改*
       * </pre>
       *
       * <code>bool updated = 5;</code>
       * @return The updated.
       */
      public boolean getUpdated() {
        return updated_;
      }
      /**
       * <pre>
       **如果EventType=UPDATE,用于标识这个字段值是否有修改*
       * </pre>
       *
       * <code>bool updated = 5;</code>
       * @param value The updated to set.
       * @return This builder for chaining.
       */
      public Builder setUpdated(boolean value) {

        updated_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **如果EventType=UPDATE,用于标识这个字段值是否有修改*
       * </pre>
       *
       * <code>bool updated = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdated() {

        updated_ = false;
        onChanged();
        return this;
      }

      /**
       * <code>bool isNull = 6;</code>
       * @return The isNull.
       */
      public boolean getIsNull() {
        if (isNullPresentCase_ == 6) {
          return (Boolean) isNullPresent_;
        }
        return false;
      }
      /**
       * <code>bool isNull = 6;</code>
       * @param value The isNull to set.
       * @return This builder for chaining.
       */
      public Builder setIsNull(boolean value) {
        isNullPresentCase_ = 6;
        isNullPresent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool isNull = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsNull() {
        if (isNullPresentCase_ == 6) {
          isNullPresentCase_ = 0;
          isNullPresent_ = null;
          onChanged();
        }
        return this;
      }

      private java.util.List<Pair> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          props_ = new java.util.ArrayList<Pair>(props_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder> propsBuilder_;

      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public java.util.List<Pair> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Pair getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Builder setProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Builder setProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Builder addProps(Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Builder addProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Builder addProps(
          Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Builder addProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Builder addAllProps(
          Iterable<? extends Pair> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Pair.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public PairOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public java.util.List<? extends PairOrBuilder>
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Pair.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public Pair.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 7;</code>
       */
      public java.util.List<Pair.Builder>
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder>
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Pair, Pair.Builder, PairOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }

      private Object value_ = "";
      /**
       * <pre>
       ** 字段值,timestamp,Datetime是一个时间格式的文本 *
       * </pre>
       *
       * <code>string value = 8;</code>
       * @return The value.
       */
      public String getValue() {
        Object ref = value_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** 字段值,timestamp,Datetime是一个时间格式的文本 *
       * </pre>
       *
       * <code>string value = 8;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** 字段值,timestamp,Datetime是一个时间格式的文本 *
       * </pre>
       *
       * <code>string value = 8;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 字段值,timestamp,Datetime是一个时间格式的文本 *
       * </pre>
       *
       * <code>string value = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {

        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 字段值,timestamp,Datetime是一个时间格式的文本 *
       * </pre>
       *
       * <code>string value = 8;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        value_ = value;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <pre>
       ** 对应数据对象原始长度 *
       * </pre>
       *
       * <code>int32 length = 9;</code>
       * @return The length.
       */
      public int getLength() {
        return length_;
      }
      /**
       * <pre>
       ** 对应数据对象原始长度 *
       * </pre>
       *
       * <code>int32 length = 9;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(int value) {

        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** 对应数据对象原始长度 *
       * </pre>
       *
       * <code>int32 length = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {

        length_ = 0;
        onChanged();
        return this;
      }

      private Object dbInternalType_ = "";
      /**
       * <pre>
       **字段数据库内部类型*
       * </pre>
       *
       * <code>string dbInternalType = 10;</code>
       * @return The dbInternalType.
       */
      public String getDbInternalType() {
        Object ref = dbInternalType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          dbInternalType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       **字段数据库内部类型*
       * </pre>
       *
       * <code>string dbInternalType = 10;</code>
       * @return The bytes for dbInternalType.
       */
      public com.google.protobuf.ByteString
          getDbInternalTypeBytes() {
        Object ref = dbInternalType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dbInternalType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       **字段数据库内部类型*
       * </pre>
       *
       * <code>string dbInternalType = 10;</code>
       * @param value The dbInternalType to set.
       * @return This builder for chaining.
       */
      public Builder setDbInternalType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        dbInternalType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **字段数据库内部类型*
       * </pre>
       *
       * <code>string dbInternalType = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbInternalType() {

        dbInternalType_ = getDefaultInstance().getDbInternalType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       **字段数据库内部类型*
       * </pre>
       *
       * <code>string dbInternalType = 10;</code>
       * @param value The bytes for dbInternalType to set.
       * @return This builder for chaining.
       */
      public Builder setDbInternalTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        dbInternalType_ = value;
        onChanged();
        return this;
      }

      private boolean isSlice_ ;
      /**
       * <code>bool isSlice = 11;</code>
       * @return The isSlice.
       */
      public boolean getIsSlice() {
        return isSlice_;
      }
      /**
       * <code>bool isSlice = 11;</code>
       * @param value The isSlice to set.
       * @return This builder for chaining.
       */
      public Builder setIsSlice(boolean value) {

        isSlice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool isSlice = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSlice() {

        isSlice_ = false;
        onChanged();
        return this;
      }

      private SlicePoint slicePoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SlicePoint, SlicePoint.Builder, SlicePointOrBuilder> slicePointBuilder_;
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
       * @return Whether the slicePoint field is set.
       */
      public boolean hasSlicePoint() {
        return slicePointBuilder_ != null || slicePoint_ != null;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
       * @return The slicePoint.
       */
      public SlicePoint getSlicePoint() {
        if (slicePointBuilder_ == null) {
          return slicePoint_ == null ? SlicePoint.getDefaultInstance() : slicePoint_;
        } else {
          return slicePointBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
       */
      public Builder setSlicePoint(SlicePoint value) {
        if (slicePointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          slicePoint_ = value;
          onChanged();
        } else {
          slicePointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
       */
      public Builder setSlicePoint(
          SlicePoint.Builder builderForValue) {
        if (slicePointBuilder_ == null) {
          slicePoint_ = builderForValue.build();
          onChanged();
        } else {
          slicePointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
       */
      public Builder mergeSlicePoint(SlicePoint value) {
        if (slicePointBuilder_ == null) {
          if (slicePoint_ != null) {
            slicePoint_ =
              SlicePoint.newBuilder(slicePoint_).mergeFrom(value).buildPartial();
          } else {
            slicePoint_ = value;
          }
          onChanged();
        } else {
          slicePointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
       */
      public Builder clearSlicePoint() {
        if (slicePointBuilder_ == null) {
          slicePoint_ = null;
          onChanged();
        } else {
          slicePoint_ = null;
          slicePointBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
       */
      public SlicePoint.Builder getSlicePointBuilder() {

        onChanged();
        return getSlicePointFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
       */
      public SlicePointOrBuilder getSlicePointOrBuilder() {
        if (slicePointBuilder_ != null) {
          return slicePointBuilder_.getMessageOrBuilder();
        } else {
          return slicePoint_ == null ?
              SlicePoint.getDefaultInstance() : slicePoint_;
        }
      }
      /**
       * <code>.com.mchz.kafkadataformatinput.formatmodel.SlicePoint slicePoint = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SlicePoint, SlicePoint.Builder, SlicePointOrBuilder>
          getSlicePointFieldBuilder() {
        if (slicePointBuilder_ == null) {
          slicePointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SlicePoint, SlicePoint.Builder, SlicePointOrBuilder>(
                  getSlicePoint(),
                  getParentForChildren(),
                  isClean());
          slicePoint_ = null;
        }
        return slicePointBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.mchz.kafkadataformatinput.formatmodel.Column)
    }

    // @@protoc_insertion_point(class_scope:com.mchz.kafkadataformatinput.formatmodel.Column)
    private static final Column DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Column();
    }

    public static Column getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Column>
        PARSER = new com.google.protobuf.AbstractParser<Column>() {
      @Override
      public Column parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Column(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Column> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Column> getParserForType() {
      return PARSER;
    }

    @Override
    public Column getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RowDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mchz.kafkadataformatinput.formatmodel.RowData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    java.util.List<Column>
        getBeforeColumnsList();
    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    Column getBeforeColumns(int index);
    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    int getBeforeColumnsCount();
    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    java.util.List<? extends ColumnOrBuilder>
        getBeforeColumnsOrBuilderList();
    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    ColumnOrBuilder getBeforeColumnsOrBuilder(
        int index);

    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    java.util.List<Column>
        getAfterColumnsList();
    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    Column getAfterColumns(int index);
    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    int getAfterColumnsCount();
    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    java.util.List<? extends ColumnOrBuilder>
        getAfterColumnsOrBuilderList();
    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    ColumnOrBuilder getAfterColumnsOrBuilder(
        int index);

    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    java.util.List<Pair>
        getPropsList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    Pair getProps(int index);
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    PairOrBuilder getPropsOrBuilder(
        int index);

    /**
     * <code>string rowId = 4;</code>
     * @return The rowId.
     */
    String getRowId();
    /**
     * <code>string rowId = 4;</code>
     * @return The bytes for rowId.
     */
    com.google.protobuf.ByteString
        getRowIdBytes();
  }
  /**
   * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.RowData}
   */
  public  static final class RowData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mchz.kafkadataformatinput.formatmodel.RowData)
      RowDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RowData.newBuilder() to construct.
    private RowData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RowData() {
      beforeColumns_ = java.util.Collections.emptyList();
      afterColumns_ = java.util.Collections.emptyList();
      props_ = java.util.Collections.emptyList();
      rowId_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RowData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RowData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                beforeColumns_ = new java.util.ArrayList<Column>();
                mutable_bitField0_ |= 0x00000001;
              }
              beforeColumns_.add(
                  input.readMessage(Column.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                afterColumns_ = new java.util.ArrayList<Column>();
                mutable_bitField0_ |= 0x00000002;
              }
              afterColumns_.add(
                  input.readMessage(Column.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                props_ = new java.util.ArrayList<Pair>();
                mutable_bitField0_ |= 0x00000004;
              }
              props_.add(
                  input.readMessage(Pair.parser(), extensionRegistry));
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              rowId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          beforeColumns_ = java.util.Collections.unmodifiableList(beforeColumns_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          afterColumns_ = java.util.Collections.unmodifiableList(afterColumns_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RowData.class, Builder.class);
    }

    public static final int BEFORECOLUMNS_FIELD_NUMBER = 1;
    private java.util.List<Column> beforeColumns_;
    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    public java.util.List<Column> getBeforeColumnsList() {
      return beforeColumns_;
    }
    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    public java.util.List<? extends ColumnOrBuilder>
        getBeforeColumnsOrBuilderList() {
      return beforeColumns_;
    }
    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    public int getBeforeColumnsCount() {
      return beforeColumns_.size();
    }
    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    public Column getBeforeColumns(int index) {
      return beforeColumns_.get(index);
    }
    /**
     * <pre>
     ** 字段信息，增量数据(修改前,删除前) *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
     */
    public ColumnOrBuilder getBeforeColumnsOrBuilder(
        int index) {
      return beforeColumns_.get(index);
    }

    public static final int AFTERCOLUMNS_FIELD_NUMBER = 2;
    private java.util.List<Column> afterColumns_;
    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    public java.util.List<Column> getAfterColumnsList() {
      return afterColumns_;
    }
    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    public java.util.List<? extends ColumnOrBuilder>
        getAfterColumnsOrBuilderList() {
      return afterColumns_;
    }
    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    public int getAfterColumnsCount() {
      return afterColumns_.size();
    }
    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    public Column getAfterColumns(int index) {
      return afterColumns_.get(index);
    }
    /**
     * <pre>
     ** 字段信息，增量数据(修改后,新增后)  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
     */
    public ColumnOrBuilder getAfterColumnsOrBuilder(
        int index) {
      return afterColumns_.get(index);
    }

    public static final int PROPS_FIELD_NUMBER = 3;
    private java.util.List<Pair> props_;
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public java.util.List<Pair> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public Pair getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public PairOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    public static final int ROWID_FIELD_NUMBER = 4;
    private volatile Object rowId_;
    /**
     * <code>string rowId = 4;</code>
     * @return The rowId.
     */
    public String getRowId() {
      Object ref = rowId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        rowId_ = s;
        return s;
      }
    }
    /**
     * <code>string rowId = 4;</code>
     * @return The bytes for rowId.
     */
    public com.google.protobuf.ByteString
        getRowIdBytes() {
      Object ref = rowId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        rowId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < beforeColumns_.size(); i++) {
        output.writeMessage(1, beforeColumns_.get(i));
      }
      for (int i = 0; i < afterColumns_.size(); i++) {
        output.writeMessage(2, afterColumns_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(3, props_.get(i));
      }
      if (!getRowIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, rowId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < beforeColumns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, beforeColumns_.get(i));
      }
      for (int i = 0; i < afterColumns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, afterColumns_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, props_.get(i));
      }
      if (!getRowIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, rowId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RowData)) {
        return super.equals(obj);
      }
      RowData other = (RowData) obj;

      if (!getBeforeColumnsList()
          .equals(other.getBeforeColumnsList())) return false;
      if (!getAfterColumnsList()
          .equals(other.getAfterColumnsList())) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!getRowId()
          .equals(other.getRowId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBeforeColumnsCount() > 0) {
        hash = (37 * hash) + BEFORECOLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getBeforeColumnsList().hashCode();
      }
      if (getAfterColumnsCount() > 0) {
        hash = (37 * hash) + AFTERCOLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getAfterColumnsList().hashCode();
      }
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      hash = (37 * hash) + ROWID_FIELD_NUMBER;
      hash = (53 * hash) + getRowId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RowData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RowData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RowData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RowData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RowData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RowData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RowData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.RowData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mchz.kafkadataformatinput.formatmodel.RowData)
        RowDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RowData.class, Builder.class);
      }

      // Construct using com.mchz.kafkadataformatinput.formatmodel.DSyncEntry.RowData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBeforeColumnsFieldBuilder();
          getAfterColumnsFieldBuilder();
          getPropsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (beforeColumnsBuilder_ == null) {
          beforeColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          beforeColumnsBuilder_.clear();
        }
        if (afterColumnsBuilder_ == null) {
          afterColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          afterColumnsBuilder_.clear();
        }
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          propsBuilder_.clear();
        }
        rowId_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_descriptor;
      }

      @Override
      public RowData getDefaultInstanceForType() {
        return RowData.getDefaultInstance();
      }

      @Override
      public RowData build() {
        RowData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RowData buildPartial() {
        RowData result = new RowData(this);
        int from_bitField0_ = bitField0_;
        if (beforeColumnsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            beforeColumns_ = java.util.Collections.unmodifiableList(beforeColumns_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.beforeColumns_ = beforeColumns_;
        } else {
          result.beforeColumns_ = beforeColumnsBuilder_.build();
        }
        if (afterColumnsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            afterColumns_ = java.util.Collections.unmodifiableList(afterColumns_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.afterColumns_ = afterColumns_;
        } else {
          result.afterColumns_ = afterColumnsBuilder_.build();
        }
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        result.rowId_ = rowId_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RowData) {
          return mergeFrom((RowData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RowData other) {
        if (other == RowData.getDefaultInstance()) return this;
        if (beforeColumnsBuilder_ == null) {
          if (!other.beforeColumns_.isEmpty()) {
            if (beforeColumns_.isEmpty()) {
              beforeColumns_ = other.beforeColumns_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBeforeColumnsIsMutable();
              beforeColumns_.addAll(other.beforeColumns_);
            }
            onChanged();
          }
        } else {
          if (!other.beforeColumns_.isEmpty()) {
            if (beforeColumnsBuilder_.isEmpty()) {
              beforeColumnsBuilder_.dispose();
              beforeColumnsBuilder_ = null;
              beforeColumns_ = other.beforeColumns_;
              bitField0_ = (bitField0_ & ~0x00000001);
              beforeColumnsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBeforeColumnsFieldBuilder() : null;
            } else {
              beforeColumnsBuilder_.addAllMessages(other.beforeColumns_);
            }
          }
        }
        if (afterColumnsBuilder_ == null) {
          if (!other.afterColumns_.isEmpty()) {
            if (afterColumns_.isEmpty()) {
              afterColumns_ = other.afterColumns_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAfterColumnsIsMutable();
              afterColumns_.addAll(other.afterColumns_);
            }
            onChanged();
          }
        } else {
          if (!other.afterColumns_.isEmpty()) {
            if (afterColumnsBuilder_.isEmpty()) {
              afterColumnsBuilder_.dispose();
              afterColumnsBuilder_ = null;
              afterColumns_ = other.afterColumns_;
              bitField0_ = (bitField0_ & ~0x00000002);
              afterColumnsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAfterColumnsFieldBuilder() : null;
            } else {
              afterColumnsBuilder_.addAllMessages(other.afterColumns_);
            }
          }
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000004);
              propsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        if (!other.getRowId().isEmpty()) {
          rowId_ = other.rowId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RowData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RowData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Column> beforeColumns_ =
        java.util.Collections.emptyList();
      private void ensureBeforeColumnsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          beforeColumns_ = new java.util.ArrayList<Column>(beforeColumns_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Column, Column.Builder, ColumnOrBuilder> beforeColumnsBuilder_;

      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public java.util.List<Column> getBeforeColumnsList() {
        if (beforeColumnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(beforeColumns_);
        } else {
          return beforeColumnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public int getBeforeColumnsCount() {
        if (beforeColumnsBuilder_ == null) {
          return beforeColumns_.size();
        } else {
          return beforeColumnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Column getBeforeColumns(int index) {
        if (beforeColumnsBuilder_ == null) {
          return beforeColumns_.get(index);
        } else {
          return beforeColumnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Builder setBeforeColumns(
          int index, Column value) {
        if (beforeColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeforeColumnsIsMutable();
          beforeColumns_.set(index, value);
          onChanged();
        } else {
          beforeColumnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Builder setBeforeColumns(
          int index, Column.Builder builderForValue) {
        if (beforeColumnsBuilder_ == null) {
          ensureBeforeColumnsIsMutable();
          beforeColumns_.set(index, builderForValue.build());
          onChanged();
        } else {
          beforeColumnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Builder addBeforeColumns(Column value) {
        if (beforeColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeforeColumnsIsMutable();
          beforeColumns_.add(value);
          onChanged();
        } else {
          beforeColumnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Builder addBeforeColumns(
          int index, Column value) {
        if (beforeColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeforeColumnsIsMutable();
          beforeColumns_.add(index, value);
          onChanged();
        } else {
          beforeColumnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Builder addBeforeColumns(
          Column.Builder builderForValue) {
        if (beforeColumnsBuilder_ == null) {
          ensureBeforeColumnsIsMutable();
          beforeColumns_.add(builderForValue.build());
          onChanged();
        } else {
          beforeColumnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Builder addBeforeColumns(
          int index, Column.Builder builderForValue) {
        if (beforeColumnsBuilder_ == null) {
          ensureBeforeColumnsIsMutable();
          beforeColumns_.add(index, builderForValue.build());
          onChanged();
        } else {
          beforeColumnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Builder addAllBeforeColumns(
          Iterable<? extends Column> values) {
        if (beforeColumnsBuilder_ == null) {
          ensureBeforeColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, beforeColumns_);
          onChanged();
        } else {
          beforeColumnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Builder clearBeforeColumns() {
        if (beforeColumnsBuilder_ == null) {
          beforeColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          beforeColumnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Builder removeBeforeColumns(int index) {
        if (beforeColumnsBuilder_ == null) {
          ensureBeforeColumnsIsMutable();
          beforeColumns_.remove(index);
          onChanged();
        } else {
          beforeColumnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Column.Builder getBeforeColumnsBuilder(
          int index) {
        return getBeforeColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public ColumnOrBuilder getBeforeColumnsOrBuilder(
          int index) {
        if (beforeColumnsBuilder_ == null) {
          return beforeColumns_.get(index);  } else {
          return beforeColumnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public java.util.List<? extends ColumnOrBuilder>
           getBeforeColumnsOrBuilderList() {
        if (beforeColumnsBuilder_ != null) {
          return beforeColumnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(beforeColumns_);
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Column.Builder addBeforeColumnsBuilder() {
        return getBeforeColumnsFieldBuilder().addBuilder(
            Column.getDefaultInstance());
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public Column.Builder addBeforeColumnsBuilder(
          int index) {
        return getBeforeColumnsFieldBuilder().addBuilder(
            index, Column.getDefaultInstance());
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改前,删除前) *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column beforeColumns = 1;</code>
       */
      public java.util.List<Column.Builder>
           getBeforeColumnsBuilderList() {
        return getBeforeColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Column, Column.Builder, ColumnOrBuilder>
          getBeforeColumnsFieldBuilder() {
        if (beforeColumnsBuilder_ == null) {
          beforeColumnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Column, Column.Builder, ColumnOrBuilder>(
                  beforeColumns_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          beforeColumns_ = null;
        }
        return beforeColumnsBuilder_;
      }

      private java.util.List<Column> afterColumns_ =
        java.util.Collections.emptyList();
      private void ensureAfterColumnsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          afterColumns_ = new java.util.ArrayList<Column>(afterColumns_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Column, Column.Builder, ColumnOrBuilder> afterColumnsBuilder_;

      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public java.util.List<Column> getAfterColumnsList() {
        if (afterColumnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(afterColumns_);
        } else {
          return afterColumnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public int getAfterColumnsCount() {
        if (afterColumnsBuilder_ == null) {
          return afterColumns_.size();
        } else {
          return afterColumnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Column getAfterColumns(int index) {
        if (afterColumnsBuilder_ == null) {
          return afterColumns_.get(index);
        } else {
          return afterColumnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Builder setAfterColumns(
          int index, Column value) {
        if (afterColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAfterColumnsIsMutable();
          afterColumns_.set(index, value);
          onChanged();
        } else {
          afterColumnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Builder setAfterColumns(
          int index, Column.Builder builderForValue) {
        if (afterColumnsBuilder_ == null) {
          ensureAfterColumnsIsMutable();
          afterColumns_.set(index, builderForValue.build());
          onChanged();
        } else {
          afterColumnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Builder addAfterColumns(Column value) {
        if (afterColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAfterColumnsIsMutable();
          afterColumns_.add(value);
          onChanged();
        } else {
          afterColumnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Builder addAfterColumns(
          int index, Column value) {
        if (afterColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAfterColumnsIsMutable();
          afterColumns_.add(index, value);
          onChanged();
        } else {
          afterColumnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Builder addAfterColumns(
          Column.Builder builderForValue) {
        if (afterColumnsBuilder_ == null) {
          ensureAfterColumnsIsMutable();
          afterColumns_.add(builderForValue.build());
          onChanged();
        } else {
          afterColumnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Builder addAfterColumns(
          int index, Column.Builder builderForValue) {
        if (afterColumnsBuilder_ == null) {
          ensureAfterColumnsIsMutable();
          afterColumns_.add(index, builderForValue.build());
          onChanged();
        } else {
          afterColumnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Builder addAllAfterColumns(
          Iterable<? extends Column> values) {
        if (afterColumnsBuilder_ == null) {
          ensureAfterColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, afterColumns_);
          onChanged();
        } else {
          afterColumnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Builder clearAfterColumns() {
        if (afterColumnsBuilder_ == null) {
          afterColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          afterColumnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Builder removeAfterColumns(int index) {
        if (afterColumnsBuilder_ == null) {
          ensureAfterColumnsIsMutable();
          afterColumns_.remove(index);
          onChanged();
        } else {
          afterColumnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Column.Builder getAfterColumnsBuilder(
          int index) {
        return getAfterColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public ColumnOrBuilder getAfterColumnsOrBuilder(
          int index) {
        if (afterColumnsBuilder_ == null) {
          return afterColumns_.get(index);  } else {
          return afterColumnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public java.util.List<? extends ColumnOrBuilder>
           getAfterColumnsOrBuilderList() {
        if (afterColumnsBuilder_ != null) {
          return afterColumnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(afterColumns_);
        }
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Column.Builder addAfterColumnsBuilder() {
        return getAfterColumnsFieldBuilder().addBuilder(
            Column.getDefaultInstance());
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public Column.Builder addAfterColumnsBuilder(
          int index) {
        return getAfterColumnsFieldBuilder().addBuilder(
            index, Column.getDefaultInstance());
      }
      /**
       * <pre>
       ** 字段信息，增量数据(修改后,新增后)  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Column afterColumns = 2;</code>
       */
      public java.util.List<Column.Builder>
           getAfterColumnsBuilderList() {
        return getAfterColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Column, Column.Builder, ColumnOrBuilder>
          getAfterColumnsFieldBuilder() {
        if (afterColumnsBuilder_ == null) {
          afterColumnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Column, Column.Builder, ColumnOrBuilder>(
                  afterColumns_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          afterColumns_ = null;
        }
        return afterColumnsBuilder_;
      }

      private java.util.List<Pair> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          props_ = new java.util.ArrayList<Pair>(props_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder> propsBuilder_;

      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public java.util.List<Pair> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Pair getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder setProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder setProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addProps(Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addProps(
          Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addAllProps(
          Iterable<? extends Pair> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Pair.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public PairOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public java.util.List<? extends PairOrBuilder>
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Pair.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Pair.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public java.util.List<Pair.Builder>
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder>
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Pair, Pair.Builder, PairOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }

      private Object rowId_ = "";
      /**
       * <code>string rowId = 4;</code>
       * @return The rowId.
       */
      public String getRowId() {
        Object ref = rowId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          rowId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string rowId = 4;</code>
       * @return The bytes for rowId.
       */
      public com.google.protobuf.ByteString
          getRowIdBytes() {
        Object ref = rowId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          rowId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string rowId = 4;</code>
       * @param value The rowId to set.
       * @return This builder for chaining.
       */
      public Builder setRowId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        rowId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string rowId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRowId() {

        rowId_ = getDefaultInstance().getRowId();
        onChanged();
        return this;
      }
      /**
       * <code>string rowId = 4;</code>
       * @param value The bytes for rowId to set.
       * @return This builder for chaining.
       */
      public Builder setRowIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        rowId_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.mchz.kafkadataformatinput.formatmodel.RowData)
    }

    // @@protoc_insertion_point(class_scope:com.mchz.kafkadataformatinput.formatmodel.RowData)
    private static final RowData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RowData();
    }

    public static RowData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RowData>
        PARSER = new com.google.protobuf.AbstractParser<RowData>() {
      @Override
      public RowData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RowData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RowData> getParserForType() {
      return PARSER;
    }

    @Override
    public RowData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RowChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mchz.kafkadataformatinput.formatmodel.RowChange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** ddl/query的sql语句  *
     * </pre>
     *
     * <code>string sql = 1;</code>
     * @return The sql.
     */
    String getSql();
    /**
     * <pre>
     ** ddl/query的sql语句  *
     * </pre>
     *
     * <code>string sql = 1;</code>
     * @return The bytes for sql.
     */
    com.google.protobuf.ByteString
        getSqlBytes();

    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    java.util.List<RowData>
        getRowDatasList();
    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    RowData getRowDatas(int index);
    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    int getRowDatasCount();
    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    java.util.List<? extends RowDataOrBuilder>
        getRowDatasOrBuilderList();
    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    RowDataOrBuilder getRowDatasOrBuilder(
        int index);

    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    java.util.List<Pair>
        getPropsList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    Pair getProps(int index);
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    PairOrBuilder getPropsOrBuilder(
        int index);
  }
  /**
   * <pre>
   **message row 每行变更数据的数据结构*
   * </pre>
   *
   * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.RowChange}
   */
  public  static final class RowChange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mchz.kafkadataformatinput.formatmodel.RowChange)
      RowChangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RowChange.newBuilder() to construct.
    private RowChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RowChange() {
      sql_ = "";
      rowDatas_ = java.util.Collections.emptyList();
      props_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RowChange();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RowChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              sql_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rowDatas_ = new java.util.ArrayList<RowData>();
                mutable_bitField0_ |= 0x00000001;
              }
              rowDatas_.add(
                  input.readMessage(RowData.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                props_ = new java.util.ArrayList<Pair>();
                mutable_bitField0_ |= 0x00000002;
              }
              props_.add(
                  input.readMessage(Pair.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rowDatas_ = java.util.Collections.unmodifiableList(rowDatas_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RowChange.class, Builder.class);
    }

    public static final int SQL_FIELD_NUMBER = 1;
    private volatile Object sql_;
    /**
     * <pre>
     ** ddl/query的sql语句  *
     * </pre>
     *
     * <code>string sql = 1;</code>
     * @return The sql.
     */
    public String getSql() {
      Object ref = sql_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sql_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** ddl/query的sql语句  *
     * </pre>
     *
     * <code>string sql = 1;</code>
     * @return The bytes for sql.
     */
    public com.google.protobuf.ByteString
        getSqlBytes() {
      Object ref = sql_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sql_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROWDATAS_FIELD_NUMBER = 2;
    private java.util.List<RowData> rowDatas_;
    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    public java.util.List<RowData> getRowDatasList() {
      return rowDatas_;
    }
    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    public java.util.List<? extends RowDataOrBuilder>
        getRowDatasOrBuilderList() {
      return rowDatas_;
    }
    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    public int getRowDatasCount() {
      return rowDatas_.size();
    }
    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    public RowData getRowDatas(int index) {
      return rowDatas_.get(index);
    }
    /**
     * <pre>
     ** 一次数据库变更可能存在多行  *
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
     */
    public RowDataOrBuilder getRowDatasOrBuilder(
        int index) {
      return rowDatas_.get(index);
    }

    public static final int PROPS_FIELD_NUMBER = 3;
    private java.util.List<Pair> props_;
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public java.util.List<Pair> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public Pair getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
     */
    public PairOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSqlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sql_);
      }
      for (int i = 0; i < rowDatas_.size(); i++) {
        output.writeMessage(2, rowDatas_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(3, props_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSqlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sql_);
      }
      for (int i = 0; i < rowDatas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rowDatas_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, props_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RowChange)) {
        return super.equals(obj);
      }
      RowChange other = (RowChange) obj;

      if (!getSql()
          .equals(other.getSql())) return false;
      if (!getRowDatasList()
          .equals(other.getRowDatasList())) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SQL_FIELD_NUMBER;
      hash = (53 * hash) + getSql().hashCode();
      if (getRowDatasCount() > 0) {
        hash = (37 * hash) + ROWDATAS_FIELD_NUMBER;
        hash = (53 * hash) + getRowDatasList().hashCode();
      }
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RowChange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowChange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RowChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RowChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RowChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RowChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RowChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RowChange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **message row 每行变更数据的数据结构*
     * </pre>
     *
     * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.RowChange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mchz.kafkadataformatinput.formatmodel.RowChange)
        RowChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RowChange.class, Builder.class);
      }

      // Construct using com.mchz.kafkadataformatinput.formatmodel.DSyncEntry.RowChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowDatasFieldBuilder();
          getPropsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        sql_ = "";

        if (rowDatasBuilder_ == null) {
          rowDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowDatasBuilder_.clear();
        }
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          propsBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_descriptor;
      }

      @Override
      public RowChange getDefaultInstanceForType() {
        return RowChange.getDefaultInstance();
      }

      @Override
      public RowChange build() {
        RowChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RowChange buildPartial() {
        RowChange result = new RowChange(this);
        int from_bitField0_ = bitField0_;
        result.sql_ = sql_;
        if (rowDatasBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rowDatas_ = java.util.Collections.unmodifiableList(rowDatas_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rowDatas_ = rowDatas_;
        } else {
          result.rowDatas_ = rowDatasBuilder_.build();
        }
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RowChange) {
          return mergeFrom((RowChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RowChange other) {
        if (other == RowChange.getDefaultInstance()) return this;
        if (!other.getSql().isEmpty()) {
          sql_ = other.sql_;
          onChanged();
        }
        if (rowDatasBuilder_ == null) {
          if (!other.rowDatas_.isEmpty()) {
            if (rowDatas_.isEmpty()) {
              rowDatas_ = other.rowDatas_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowDatasIsMutable();
              rowDatas_.addAll(other.rowDatas_);
            }
            onChanged();
          }
        } else {
          if (!other.rowDatas_.isEmpty()) {
            if (rowDatasBuilder_.isEmpty()) {
              rowDatasBuilder_.dispose();
              rowDatasBuilder_ = null;
              rowDatas_ = other.rowDatas_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowDatasBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowDatasFieldBuilder() : null;
            } else {
              rowDatasBuilder_.addAllMessages(other.rowDatas_);
            }
          }
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000002);
              propsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RowChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RowChange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object sql_ = "";
      /**
       * <pre>
       ** ddl/query的sql语句  *
       * </pre>
       *
       * <code>string sql = 1;</code>
       * @return The sql.
       */
      public String getSql() {
        Object ref = sql_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sql_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** ddl/query的sql语句  *
       * </pre>
       *
       * <code>string sql = 1;</code>
       * @return The bytes for sql.
       */
      public com.google.protobuf.ByteString
          getSqlBytes() {
        Object ref = sql_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sql_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** ddl/query的sql语句  *
       * </pre>
       *
       * <code>string sql = 1;</code>
       * @param value The sql to set.
       * @return This builder for chaining.
       */
      public Builder setSql(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        sql_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** ddl/query的sql语句  *
       * </pre>
       *
       * <code>string sql = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSql() {

        sql_ = getDefaultInstance().getSql();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** ddl/query的sql语句  *
       * </pre>
       *
       * <code>string sql = 1;</code>
       * @param value The bytes for sql to set.
       * @return This builder for chaining.
       */
      public Builder setSqlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        sql_ = value;
        onChanged();
        return this;
      }

      private java.util.List<RowData> rowDatas_ =
        java.util.Collections.emptyList();
      private void ensureRowDatasIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rowDatas_ = new java.util.ArrayList<RowData>(rowDatas_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RowData, RowData.Builder, RowDataOrBuilder> rowDatasBuilder_;

      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public java.util.List<RowData> getRowDatasList() {
        if (rowDatasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rowDatas_);
        } else {
          return rowDatasBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public int getRowDatasCount() {
        if (rowDatasBuilder_ == null) {
          return rowDatas_.size();
        } else {
          return rowDatasBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public RowData getRowDatas(int index) {
        if (rowDatasBuilder_ == null) {
          return rowDatas_.get(index);
        } else {
          return rowDatasBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public Builder setRowDatas(
          int index, RowData value) {
        if (rowDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowDatasIsMutable();
          rowDatas_.set(index, value);
          onChanged();
        } else {
          rowDatasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public Builder setRowDatas(
          int index, RowData.Builder builderForValue) {
        if (rowDatasBuilder_ == null) {
          ensureRowDatasIsMutable();
          rowDatas_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowDatasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public Builder addRowDatas(RowData value) {
        if (rowDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowDatasIsMutable();
          rowDatas_.add(value);
          onChanged();
        } else {
          rowDatasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public Builder addRowDatas(
          int index, RowData value) {
        if (rowDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowDatasIsMutable();
          rowDatas_.add(index, value);
          onChanged();
        } else {
          rowDatasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public Builder addRowDatas(
          RowData.Builder builderForValue) {
        if (rowDatasBuilder_ == null) {
          ensureRowDatasIsMutable();
          rowDatas_.add(builderForValue.build());
          onChanged();
        } else {
          rowDatasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public Builder addRowDatas(
          int index, RowData.Builder builderForValue) {
        if (rowDatasBuilder_ == null) {
          ensureRowDatasIsMutable();
          rowDatas_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowDatasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public Builder addAllRowDatas(
          Iterable<? extends RowData> values) {
        if (rowDatasBuilder_ == null) {
          ensureRowDatasIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rowDatas_);
          onChanged();
        } else {
          rowDatasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public Builder clearRowDatas() {
        if (rowDatasBuilder_ == null) {
          rowDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowDatasBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public Builder removeRowDatas(int index) {
        if (rowDatasBuilder_ == null) {
          ensureRowDatasIsMutable();
          rowDatas_.remove(index);
          onChanged();
        } else {
          rowDatasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public RowData.Builder getRowDatasBuilder(
          int index) {
        return getRowDatasFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public RowDataOrBuilder getRowDatasOrBuilder(
          int index) {
        if (rowDatasBuilder_ == null) {
          return rowDatas_.get(index);  } else {
          return rowDatasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public java.util.List<? extends RowDataOrBuilder>
           getRowDatasOrBuilderList() {
        if (rowDatasBuilder_ != null) {
          return rowDatasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rowDatas_);
        }
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public RowData.Builder addRowDatasBuilder() {
        return getRowDatasFieldBuilder().addBuilder(
            RowData.getDefaultInstance());
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public RowData.Builder addRowDatasBuilder(
          int index) {
        return getRowDatasFieldBuilder().addBuilder(
            index, RowData.getDefaultInstance());
      }
      /**
       * <pre>
       ** 一次数据库变更可能存在多行  *
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.RowData rowDatas = 2;</code>
       */
      public java.util.List<RowData.Builder>
           getRowDatasBuilderList() {
        return getRowDatasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RowData, RowData.Builder, RowDataOrBuilder>
          getRowDatasFieldBuilder() {
        if (rowDatasBuilder_ == null) {
          rowDatasBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RowData, RowData.Builder, RowDataOrBuilder>(
                  rowDatas_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rowDatas_ = null;
        }
        return rowDatasBuilder_;
      }

      private java.util.List<Pair> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          props_ = new java.util.ArrayList<Pair>(props_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder> propsBuilder_;

      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public java.util.List<Pair> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Pair getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder setProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder setProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addProps(Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addProps(
          Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder addAllProps(
          Iterable<? extends Pair> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Pair.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public PairOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public java.util.List<? extends PairOrBuilder>
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Pair.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public Pair.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 3;</code>
       */
      public java.util.List<Pair.Builder>
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder>
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Pair, Pair.Builder, PairOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.mchz.kafkadataformatinput.formatmodel.RowChange)
    }

    // @@protoc_insertion_point(class_scope:com.mchz.kafkadataformatinput.formatmodel.RowChange)
    private static final RowChange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RowChange();
    }

    public static RowChange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RowChange>
        PARSER = new com.google.protobuf.AbstractParser<RowChange>() {
      @Override
      public RowChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowChange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RowChange> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RowChange> getParserForType() {
      return PARSER;
    }

    @Override
    public RowChange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionBeginOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mchz.kafkadataformatinput.formatmodel.TransactionBegin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    java.util.List<Pair>
        getPropsList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    Pair getProps(int index);
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    PairOrBuilder getPropsOrBuilder(
        int index);

    /**
     * <pre>
     **执行的thread Id*
     * </pre>
     *
     * <code>int64 threadId = 2;</code>
     * @return The threadId.
     */
    long getThreadId();
  }
  /**
   * <pre>
   **开始事务的一些信息*
   * </pre>
   *
   * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.TransactionBegin}
   */
  public  static final class TransactionBegin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mchz.kafkadataformatinput.formatmodel.TransactionBegin)
      TransactionBeginOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionBegin.newBuilder() to construct.
    private TransactionBegin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionBegin() {
      props_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransactionBegin();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionBegin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                props_ = new java.util.ArrayList<Pair>();
                mutable_bitField0_ |= 0x00000001;
              }
              props_.add(
                  input.readMessage(Pair.parser(), extensionRegistry));
              break;
            }
            case 16: {

              threadId_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TransactionBegin.class, Builder.class);
    }

    public static final int PROPS_FIELD_NUMBER = 1;
    private java.util.List<Pair> props_;
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public java.util.List<Pair> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public Pair getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public PairOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    public static final int THREADID_FIELD_NUMBER = 2;
    private long threadId_;
    /**
     * <pre>
     **执行的thread Id*
     * </pre>
     *
     * <code>int64 threadId = 2;</code>
     * @return The threadId.
     */
    public long getThreadId() {
      return threadId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(1, props_.get(i));
      }
      if (threadId_ != 0L) {
        output.writeInt64(2, threadId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, props_.get(i));
      }
      if (threadId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, threadId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TransactionBegin)) {
        return super.equals(obj);
      }
      TransactionBegin other = (TransactionBegin) obj;

      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (getThreadId()
          != other.getThreadId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      hash = (37 * hash) + THREADID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getThreadId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TransactionBegin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TransactionBegin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TransactionBegin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TransactionBegin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TransactionBegin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TransactionBegin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TransactionBegin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TransactionBegin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TransactionBegin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TransactionBegin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TransactionBegin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TransactionBegin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TransactionBegin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **开始事务的一些信息*
     * </pre>
     *
     * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.TransactionBegin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mchz.kafkadataformatinput.formatmodel.TransactionBegin)
        TransactionBeginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TransactionBegin.class, Builder.class);
      }

      // Construct using com.mchz.kafkadataformatinput.formatmodel.DSyncEntry.TransactionBegin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          propsBuilder_.clear();
        }
        threadId_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_descriptor;
      }

      @Override
      public TransactionBegin getDefaultInstanceForType() {
        return TransactionBegin.getDefaultInstance();
      }

      @Override
      public TransactionBegin build() {
        TransactionBegin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TransactionBegin buildPartial() {
        TransactionBegin result = new TransactionBegin(this);
        int from_bitField0_ = bitField0_;
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        result.threadId_ = threadId_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TransactionBegin) {
          return mergeFrom((TransactionBegin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TransactionBegin other) {
        if (other == TransactionBegin.getDefaultInstance()) return this;
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
              propsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        if (other.getThreadId() != 0L) {
          setThreadId(other.getThreadId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TransactionBegin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TransactionBegin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Pair> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          props_ = new java.util.ArrayList<Pair>(props_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder> propsBuilder_;

      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public java.util.List<Pair> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Pair getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder setProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder setProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addProps(Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addProps(
          Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addAllProps(
          Iterable<? extends Pair> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Pair.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public PairOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public java.util.List<? extends PairOrBuilder>
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Pair.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Pair.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public java.util.List<Pair.Builder>
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder>
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Pair, Pair.Builder, PairOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }

      private long threadId_ ;
      /**
       * <pre>
       **执行的thread Id*
       * </pre>
       *
       * <code>int64 threadId = 2;</code>
       * @return The threadId.
       */
      public long getThreadId() {
        return threadId_;
      }
      /**
       * <pre>
       **执行的thread Id*
       * </pre>
       *
       * <code>int64 threadId = 2;</code>
       * @param value The threadId to set.
       * @return This builder for chaining.
       */
      public Builder setThreadId(long value) {

        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **执行的thread Id*
       * </pre>
       *
       * <code>int64 threadId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearThreadId() {

        threadId_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.mchz.kafkadataformatinput.formatmodel.TransactionBegin)
    }

    // @@protoc_insertion_point(class_scope:com.mchz.kafkadataformatinput.formatmodel.TransactionBegin)
    private static final TransactionBegin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TransactionBegin();
    }

    public static TransactionBegin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionBegin>
        PARSER = new com.google.protobuf.AbstractParser<TransactionBegin>() {
      @Override
      public TransactionBegin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionBegin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionBegin> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TransactionBegin> getParserForType() {
      return PARSER;
    }

    @Override
    public TransactionBegin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionEndOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mchz.kafkadataformatinput.formatmodel.TransactionEnd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    java.util.List<Pair>
        getPropsList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    Pair getProps(int index);
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList();
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    PairOrBuilder getPropsOrBuilder(
        int index);
  }
  /**
   * <pre>
   **结束事务的一些信息*
   * </pre>
   *
   * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.TransactionEnd}
   */
  public  static final class TransactionEnd extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mchz.kafkadataformatinput.formatmodel.TransactionEnd)
      TransactionEndOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionEnd.newBuilder() to construct.
    private TransactionEnd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionEnd() {
      props_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransactionEnd();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                props_ = new java.util.ArrayList<Pair>();
                mutable_bitField0_ |= 0x00000001;
              }
              props_.add(
                  input.readMessage(Pair.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TransactionEnd.class, Builder.class);
    }

    public static final int PROPS_FIELD_NUMBER = 1;
    private java.util.List<Pair> props_;
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public java.util.List<Pair> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public java.util.List<? extends PairOrBuilder>
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public Pair getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
     */
    public PairOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(1, props_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, props_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TransactionEnd)) {
        return super.equals(obj);
      }
      TransactionEnd other = (TransactionEnd) obj;

      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TransactionEnd parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TransactionEnd parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TransactionEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TransactionEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TransactionEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TransactionEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TransactionEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TransactionEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TransactionEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TransactionEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TransactionEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TransactionEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TransactionEnd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **结束事务的一些信息*
     * </pre>
     *
     * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.TransactionEnd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mchz.kafkadataformatinput.formatmodel.TransactionEnd)
        TransactionEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TransactionEnd.class, Builder.class);
      }

      // Construct using com.mchz.kafkadataformatinput.formatmodel.DSyncEntry.TransactionEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          propsBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_descriptor;
      }

      @Override
      public TransactionEnd getDefaultInstanceForType() {
        return TransactionEnd.getDefaultInstance();
      }

      @Override
      public TransactionEnd build() {
        TransactionEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TransactionEnd buildPartial() {
        TransactionEnd result = new TransactionEnd(this);
        int from_bitField0_ = bitField0_;
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TransactionEnd) {
          return mergeFrom((TransactionEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TransactionEnd other) {
        if (other == TransactionEnd.getDefaultInstance()) return this;
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
              propsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TransactionEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TransactionEnd) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Pair> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          props_ = new java.util.ArrayList<Pair>(props_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder> propsBuilder_;

      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public java.util.List<Pair> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Pair getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder setProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder setProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addProps(Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addProps(
          int index, Pair value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addProps(
          Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addProps(
          int index, Pair.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder addAllProps(
          Iterable<? extends Pair> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Pair.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public PairOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public java.util.List<? extends PairOrBuilder>
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Pair.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public Pair.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, Pair.getDefaultInstance());
      }
      /**
       * <pre>
       **预留扩展*
       * </pre>
       *
       * <code>repeated .com.mchz.kafkadataformatinput.formatmodel.Pair props = 1;</code>
       */
      public java.util.List<Pair.Builder>
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Pair, Pair.Builder, PairOrBuilder>
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Pair, Pair.Builder, PairOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.mchz.kafkadataformatinput.formatmodel.TransactionEnd)
    }

    // @@protoc_insertion_point(class_scope:com.mchz.kafkadataformatinput.formatmodel.TransactionEnd)
    private static final TransactionEnd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TransactionEnd();
    }

    public static TransactionEnd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionEnd>
        PARSER = new com.google.protobuf.AbstractParser<TransactionEnd>() {
      @Override
      public TransactionEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionEnd(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionEnd> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TransactionEnd> getParserForType() {
      return PARSER;
    }

    @Override
    public TransactionEnd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SlicePointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mchz.kafkadataformatinput.formatmodel.SlicePoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string sliceId = 1;</code>
     * @return The sliceId.
     */
    String getSliceId();
    /**
     * <code>string sliceId = 1;</code>
     * @return The bytes for sliceId.
     */
    com.google.protobuf.ByteString
        getSliceIdBytes();

    /**
     * <code>int32 sliceNumber = 2;</code>
     * @return The sliceNumber.
     */
    int getSliceNumber();
  }
  /**
   * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.SlicePoint}
   */
  public  static final class SlicePoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mchz.kafkadataformatinput.formatmodel.SlicePoint)
      SlicePointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SlicePoint.newBuilder() to construct.
    private SlicePoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SlicePoint() {
      sliceId_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SlicePoint();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SlicePoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              sliceId_ = s;
              break;
            }
            case 16: {

              sliceNumber_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SlicePoint.class, Builder.class);
    }

    public static final int SLICEID_FIELD_NUMBER = 1;
    private volatile Object sliceId_;
    /**
     * <code>string sliceId = 1;</code>
     * @return The sliceId.
     */
    public String getSliceId() {
      Object ref = sliceId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sliceId_ = s;
        return s;
      }
    }
    /**
     * <code>string sliceId = 1;</code>
     * @return The bytes for sliceId.
     */
    public com.google.protobuf.ByteString
        getSliceIdBytes() {
      Object ref = sliceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sliceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SLICENUMBER_FIELD_NUMBER = 2;
    private int sliceNumber_;
    /**
     * <code>int32 sliceNumber = 2;</code>
     * @return The sliceNumber.
     */
    public int getSliceNumber() {
      return sliceNumber_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSliceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sliceId_);
      }
      if (sliceNumber_ != 0) {
        output.writeInt32(2, sliceNumber_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSliceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sliceId_);
      }
      if (sliceNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sliceNumber_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SlicePoint)) {
        return super.equals(obj);
      }
      SlicePoint other = (SlicePoint) obj;

      if (!getSliceId()
          .equals(other.getSliceId())) return false;
      if (getSliceNumber()
          != other.getSliceNumber()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SLICEID_FIELD_NUMBER;
      hash = (53 * hash) + getSliceId().hashCode();
      hash = (37 * hash) + SLICENUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getSliceNumber();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SlicePoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SlicePoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SlicePoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SlicePoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SlicePoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SlicePoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SlicePoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SlicePoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SlicePoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SlicePoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SlicePoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SlicePoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SlicePoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.SlicePoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mchz.kafkadataformatinput.formatmodel.SlicePoint)
        SlicePointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SlicePoint.class, Builder.class);
      }

      // Construct using com.mchz.kafkadataformatinput.formatmodel.DSyncEntry.SlicePoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        sliceId_ = "";

        sliceNumber_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_descriptor;
      }

      @Override
      public SlicePoint getDefaultInstanceForType() {
        return SlicePoint.getDefaultInstance();
      }

      @Override
      public SlicePoint build() {
        SlicePoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SlicePoint buildPartial() {
        SlicePoint result = new SlicePoint(this);
        result.sliceId_ = sliceId_;
        result.sliceNumber_ = sliceNumber_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SlicePoint) {
          return mergeFrom((SlicePoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SlicePoint other) {
        if (other == SlicePoint.getDefaultInstance()) return this;
        if (!other.getSliceId().isEmpty()) {
          sliceId_ = other.sliceId_;
          onChanged();
        }
        if (other.getSliceNumber() != 0) {
          setSliceNumber(other.getSliceNumber());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SlicePoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SlicePoint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object sliceId_ = "";
      /**
       * <code>string sliceId = 1;</code>
       * @return The sliceId.
       */
      public String getSliceId() {
        Object ref = sliceId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sliceId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string sliceId = 1;</code>
       * @return The bytes for sliceId.
       */
      public com.google.protobuf.ByteString
          getSliceIdBytes() {
        Object ref = sliceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sliceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sliceId = 1;</code>
       * @param value The sliceId to set.
       * @return This builder for chaining.
       */
      public Builder setSliceId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        sliceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sliceId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSliceId() {

        sliceId_ = getDefaultInstance().getSliceId();
        onChanged();
        return this;
      }
      /**
       * <code>string sliceId = 1;</code>
       * @param value The bytes for sliceId to set.
       * @return This builder for chaining.
       */
      public Builder setSliceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        sliceId_ = value;
        onChanged();
        return this;
      }

      private int sliceNumber_ ;
      /**
       * <code>int32 sliceNumber = 2;</code>
       * @return The sliceNumber.
       */
      public int getSliceNumber() {
        return sliceNumber_;
      }
      /**
       * <code>int32 sliceNumber = 2;</code>
       * @param value The sliceNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSliceNumber(int value) {

        sliceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sliceNumber = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSliceNumber() {

        sliceNumber_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.mchz.kafkadataformatinput.formatmodel.SlicePoint)
    }

    // @@protoc_insertion_point(class_scope:com.mchz.kafkadataformatinput.formatmodel.SlicePoint)
    private static final SlicePoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SlicePoint();
    }

    public static SlicePoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SlicePoint>
        PARSER = new com.google.protobuf.AbstractParser<SlicePoint>() {
      @Override
      public SlicePoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SlicePoint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SlicePoint> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SlicePoint> getParserForType() {
      return PARSER;
    }

    @Override
    public SlicePoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mchz.kafkadataformatinput.formatmodel.Pair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    String getValue();
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * <pre>
   **预留扩展*
   * </pre>
   *
   * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.Pair}
   */
  public  static final class Pair extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.mchz.kafkadataformatinput.formatmodel.Pair)
      PairOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Pair.newBuilder() to construct.
    private Pair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pair() {
      key_ = "";
      value_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Pair();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Pair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Pair.class, Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile Object key_;
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    public String getKey() {
      Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile Object value_;
    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    public String getValue() {
      Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Pair)) {
        return super.equals(obj);
      }
      Pair other = (Pair) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Pair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Pair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Pair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Pair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Pair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Pair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Pair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Pair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Pair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Pair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Pair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Pair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Pair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **预留扩展*
     * </pre>
     *
     * Protobuf type {@code com.mchz.kafkadataformatinput.formatmodel.Pair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mchz.kafkadataformatinput.formatmodel.Pair)
        PairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Pair.class, Builder.class);
      }

      // Construct using com.mchz.kafkadataformatinput.formatmodel.DSyncEntry.Pair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        key_ = "";

        value_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DSyncEntry.internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_descriptor;
      }

      @Override
      public Pair getDefaultInstanceForType() {
        return Pair.getDefaultInstance();
      }

      @Override
      public Pair build() {
        Pair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Pair buildPartial() {
        Pair result = new Pair(this);
        result.key_ = key_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Pair) {
          return mergeFrom((Pair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Pair other) {
        if (other == Pair.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Pair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Pair) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public String getKey() {
        Object ref = key_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {

        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        key_ = value;
        onChanged();
        return this;
      }

      private Object value_ = "";
      /**
       * <code>string value = 2;</code>
       * @return The value.
       */
      public String getValue() {
        Object ref = value_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {

        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        value_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.mchz.kafkadataformatinput.formatmodel.Pair)
    }

    // @@protoc_insertion_point(class_scope:com.mchz.kafkadataformatinput.formatmodel.Pair)
    private static final Pair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Pair();
    }

    public static Pair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Pair>
        PARSER = new com.google.protobuf.AbstractParser<Pair>() {
      @Override
      public Pair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pair(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Pair> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Pair> getParserForType() {
      return PARSER;
    }

    @Override
    public Pair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\023EntryProtocol.proto\022)com.mchz.kafkadat" +
      "aformatinput.formatmodel\"\276\001\n\005Entry\022A\n\006he" +
      "ader\030\001 \001(\01321.com.mchz.kafkadataformatinp" +
      "ut.formatmodel.Header\022I\n\tentryType\030\002 \001(\016" +
      "24.com.mchz.kafkadataformatinput.formatm" +
      "odel.EntryTypeH\000\022\022\n\nstoreValue\030\003 \001(\014B\023\n\021" +
      "entryType_present\"\241\006\n\006Header\022\021\n\007version\030" +
      "\001 \001(\005H\000\022\023\n\013logfileName\030\002 \001(\t\022\025\n\rlogfileO" +
      "ffset\030\003 \001(\003\022\020\n\010serverId\030\004 \001(\003\022\024\n\014servere" +
      "nCode\030\005 \001(\t\022\023\n\013executeTime\030\006 \001(\003\022E\n\nsour" +
      "ceType\030\007 \001(\0162/.com.mchz.kafkadataformati" +
      "nput.formatmodel.TypeH\001\022\017\n\007catalog\030\010 \001(\t" +
      "\022\022\n\nschemaName\030\t \001(\t\022\022\n\nobjectName\030\n \001(\t" +
      "\022\023\n\013eventLength\030\013 \001(\003\022I\n\teventType\030\014 \001(\016" +
      "24.com.mchz.kafkadataformatinput.formatm" +
      "odel.EventTypeH\002\022\025\n\rtransactionId\030\r \001(\t\022" +
      "\024\n\014relativeName\030\016 \001(\t\022\030\n\020lastChangeNumbe" +
      "r\030\017 \001(\t\022\017\n\007tableId\030\020 \001(\003\022\017\n\005isDdl\030\021 \001(\010H" +
      "\003\022\025\n\rddlSchemaName\030\022 \001(\t\022K\n\nobjectType\030\023" +
      " \001(\01625.com.mchz.kafkadataformatinput.for" +
      "matmodel.ObjectTypeH\004\022I\n\nslicePoint\030\024 \001(" +
      "\01325.com.mchz.kafkadataformatinput.format" +
      "model.SlicePoint\022>\n\005props\030\025 \003(\0132/.com.mc" +
      "hz.kafkadataformatinput.formatmodel.Pair" +
      "B\021\n\017version_presentB\024\n\022sourceType_presen" +
      "tB\023\n\021eventType_presentB\017\n\risDdl_presentB" +
      "\024\n\022objectType_present\"\315\002\n\006Column\022\r\n\005inde" +
      "x\030\001 \001(\005\022\017\n\007sqlType\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\022\r" +
      "\n\005isKey\030\004 \001(\010\022\017\n\007updated\030\005 \001(\010\022\020\n\006isNull" +
      "\030\006 \001(\010H\000\022>\n\005props\030\007 \003(\0132/.com.mchz.kafka" +
      "dataformatinput.formatmodel.Pair\022\r\n\005valu" +
      "e\030\010 \001(\t\022\016\n\006length\030\t \001(\005\022\026\n\016dbInternalTyp" +
      "e\030\n \001(\t\022\017\n\007isSlice\030\013 \001(\010\022I\n\nslicePoint\030\014" +
      " \001(\01325.com.mchz.kafkadataformatinput.for" +
      "matmodel.SlicePointB\020\n\016isNull_present\"\353\001" +
      "\n\007RowData\022H\n\rbeforeColumns\030\001 \003(\01321.com.m" +
      "chz.kafkadataformatinput.formatmodel.Col" +
      "umn\022G\n\014afterColumns\030\002 \003(\01321.com.mchz.kaf" +
      "kadataformatinput.formatmodel.Column\022>\n\005" +
      "props\030\003 \003(\0132/.com.mchz.kafkadataformatin" +
      "put.formatmodel.Pair\022\r\n\005rowId\030\004 \001(\t\"\236\001\n\t" +
      "RowChange\022\013\n\003sql\030\001 \001(\t\022D\n\010rowDatas\030\002 \003(\013" +
      "22.com.mchz.kafkadataformatinput.formatm" +
      "odel.RowData\022>\n\005props\030\003 \003(\0132/.com.mchz.k" +
      "afkadataformatinput.formatmodel.Pair\"d\n\020" +
      "TransactionBegin\022>\n\005props\030\001 \003(\0132/.com.mc" +
      "hz.kafkadataformatinput.formatmodel.Pair" +
      "\022\020\n\010threadId\030\002 \001(\003\"P\n\016TransactionEnd\022>\n\005" +
      "props\030\001 \003(\0132/.com.mchz.kafkadataformatin" +
      "put.formatmodel.Pair\"2\n\nSlicePoint\022\017\n\007sl" +
      "iceId\030\001 \001(\t\022\023\n\013sliceNumber\030\002 \001(\005\"\"\n\004Pair" +
      "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t*}\n\tEntryTyp" +
      "e\022\035\n\031ENTRYTYPECOMPATIBLEPROTO2\020\000\022\024\n\020TRAN" +
      "SACTIONBEGIN\020\001\022\013\n\007ROWDATA\020\002\022\022\n\016TRANSACTI" +
      "ONEND\020\003\022\r\n\tHEARTBEAT\020\004\022\013\n\007GTIDLOG\020\005*\270\003\n\t" +
      "EventType\022\035\n\031EVENTTYPECOMPATIBLEPROTO2\020\000" +
      "\022\n\n\006INSERT\020\001\022\n\n\006UPDATE\020\002\022\n\n\006DELETE\020\003\022\n\n\006" +
      "CREATE\020\004\022\t\n\005ALTER\020\005\022\t\n\005ERASE\020\006\022\t\n\005QUERY\020" +
      "\007\022\014\n\010TRUNCATE\020\010\022\n\n\006RENAME\020\t\022\n\n\006CINDEX\020\n\022" +
      "\n\n\006DINDEX\020\013\022\010\n\004GTID\020\014\022\014\n\010XACOMMIT\020\r\022\016\n\nX" +
      "AROLLBACK\020\016\022\016\n\nMHEARTBEAT\020\017\022\010\n\004DROP\020\020\022\r\n" +
      "\tLOB_SLICE\020\021\022\024\n\020OBJECT_EXCEPTION\020\022\022\021\n\rOB" +
      "JECT_FINISH\020\023\022\023\n\017STOCK_EXCEPTION\020\024\022\020\n\014ST" +
      "OCK_FINISH\020\025\022\017\n\013ROWROLLBACK\0202\022\013\n\007ROW_CFA" +
      "\0203\022\013\n\007ROW_LMN\0204\022\014\n\010ROW_LOCK\0205\022\r\n\tROW_CHA" +
      "IN\0206\022\013\n\007ROW_MFC\0207\022\023\n\017DDL_TRANSACTION\0208*V" +
      "\n\004Type\022\030\n\024TYPECOMPATIBLEPROTO2\020\000\022\n\n\006ORAC" +
      "LE\020\001\022\t\n\005MYSQL\020\002\022\016\n\nPOSTGRESQL\020\003\022\r\n\tSQLSE" +
      "RVER\020\004*\226\004\n\nObjectType\022\036\n\032OBJECTTYPECOMPA" +
      "TIBLEPROTO2\020\000\022\026\n\022PARTITION_FUNCTION\020\001\022\024\n" +
      "\020PARTITION_SCHEMA\020\002\022\010\n\004TYPE\020\003\022\r\n\tTYPE_BO" +
      "DY\020\004\022\013\n\007CLUSTER\020\005\022\014\n\010SEQUENCE\020\006\022\010\n\004RULE\020" +
      "\007\022\t\n\005TABLE\020\010\022\022\n\016OBJECT_COMMENT\020\t\022\022\n\016COLU" +
      "MN_COMMENT\020\n\022\021\n\rPK_CONSTRAINT\020\013\022\022\n\016UNI_C" +
      "ONSTRAINT\020\014\022\024\n\020CHECK_CONSTRAINT\020\r\022\021\n\rFK_" +
      "CONSTRAINT\020\016\022\022\n\016DEF_CONSTRAINT\020\017\022\t\n\005INDE" +
      "X\020\020\022\010\n\004VIEW\020\021\022\014\n\010FUNCTION\020\022\022\013\n\007TRIGGER\020\023" +
      "\022\r\n\tPROCEDURE\020\024\022\013\n\007PACKAGE\020\025\022\014\n\010DATABASE" +
      "\020\026\022\013\n\007DB_LINK\020\027\022\t\n\005EVENT\020\030\022\n\n\006SYSTEM\020\031\022\031" +
      "\n\025MATERIALIZED_VIEW_LOG\020\032\022\025\n\021MATERIALIZE" +
      "D_VIEW\020\033\022\013\n\007SYNONYM\020\034\022\020\n\014PACKAGE_BODY\020\035\022" +
      "\026\n\022EXCLUDE_CONSTRAINT\020\036B9\n)com.mchz.kafk" +
      "adataformatinput.formatmodelB\nDSyncEntry" +
      "H\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mchz_kafkadataformatinput_formatmodel_Entry_descriptor,
        new String[] { "Header", "EntryType", "StoreValue", "EntryTypePresent", });
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mchz_kafkadataformatinput_formatmodel_Header_descriptor,
        new String[] { "Version", "LogfileName", "LogfileOffset", "ServerId", "ServerenCode", "ExecuteTime", "SourceType", "Catalog", "SchemaName", "ObjectName", "EventLength", "EventType", "TransactionId", "RelativeName", "LastChangeNumber", "TableId", "IsDdl", "DdlSchemaName", "ObjectType", "SlicePoint", "Props", "VersionPresent", "SourceTypePresent", "EventTypePresent", "IsDdlPresent", "ObjectTypePresent", });
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mchz_kafkadataformatinput_formatmodel_Column_descriptor,
        new String[] { "Index", "SqlType", "Name", "IsKey", "Updated", "IsNull", "Props", "Value", "Length", "DbInternalType", "IsSlice", "SlicePoint", "IsNullPresent", });
    internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mchz_kafkadataformatinput_formatmodel_RowData_descriptor,
        new String[] { "BeforeColumns", "AfterColumns", "Props", "RowId", });
    internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mchz_kafkadataformatinput_formatmodel_RowChange_descriptor,
        new String[] { "Sql", "RowDatas", "Props", });
    internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionBegin_descriptor,
        new String[] { "Props", "ThreadId", });
    internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mchz_kafkadataformatinput_formatmodel_TransactionEnd_descriptor,
        new String[] { "Props", });
    internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mchz_kafkadataformatinput_formatmodel_SlicePoint_descriptor,
        new String[] { "SliceId", "SliceNumber", });
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_mchz_kafkadataformatinput_formatmodel_Pair_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
